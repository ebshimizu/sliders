vector<double> compTest(const vector<double> &params)
{
    vector<double> result(4);
    
    const double s0 = params[0]; // Background_r;
    const double s1 = params[1]; // Background_g;
    const double s2 = params[2]; // Background_b;
    const double s3 = params[3]; // Background_a;
    const double s4 = params[4]; // x_Background__opacity;
    const double s5 = params[5]; // x_Increase Wave Contrast (Opacity)__opacity;
    const double s6 = params[6]; // x_Increase Wave Contrast (Opacity)_on;
    const double s7 = params[7]; // Photo Crossover_r;
    const double s8 = params[8]; // Photo Crossover_g;
    const double s9 = params[9]; // Photo Crossover_b;
    const double s10 = params[10]; // Photo Crossover_a;
    const double s11 = params[11]; // x_Photo Crossover__opacity;
    const double s12 = params[12]; // x_Randomise Wave Color__opacity;
    const double s13 = params[13]; // x_Randomise Wave Color_hue;
    const double s14 = params[14]; // x_Randomise Wave Color_light;
    const double s15 = params[15]; // x_Randomise Wave Color_sat;
    const double s16 = params[16]; // Soft Cloud Overlay_r;
    const double s17 = params[17]; // Soft Cloud Overlay_g;
    const double s18 = params[18]; // Soft Cloud Overlay_b;
    const double s19 = params[19]; // Soft Cloud Overlay_a;
    const double s20 = params[20]; // x_Soft Cloud Overlay__opacity;
    const double s21 = params[21]; // Wave 1_r;
    const double s22 = params[22]; // Wave 1_g;
    const double s23 = params[23]; // Wave 1_b;
    const double s24 = params[24]; // Wave 1_a;
    const double s25 = params[25]; // x_Wave 1__opacity;
    const double s26 = params[26]; // Wave 10_r;
    const double s27 = params[27]; // Wave 10_g;
    const double s28 = params[28]; // Wave 10_b;
    const double s29 = params[29]; // Wave 10_a;
    const double s30 = params[30]; // x_Wave 10__opacity;
    const double s31 = params[31]; // Wave 11_r;
    const double s32 = params[32]; // Wave 11_g;
    const double s33 = params[33]; // Wave 11_b;
    const double s34 = params[34]; // Wave 11_a;
    const double s35 = params[35]; // x_Wave 11__opacity;
    const double s36 = params[36]; // Wave 12_r;
    const double s37 = params[37]; // Wave 12_g;
    const double s38 = params[38]; // Wave 12_b;
    const double s39 = params[39]; // Wave 12_a;
    const double s40 = params[40]; // x_Wave 12__opacity;
    const double s41 = params[41]; // Wave 13_r;
    const double s42 = params[42]; // Wave 13_g;
    const double s43 = params[43]; // Wave 13_b;
    const double s44 = params[44]; // Wave 13_a;
    const double s45 = params[45]; // x_Wave 13__opacity;
    const double s46 = params[46]; // Wave 14_r;
    const double s47 = params[47]; // Wave 14_g;
    const double s48 = params[48]; // Wave 14_b;
    const double s49 = params[49]; // Wave 14_a;
    const double s50 = params[50]; // x_Wave 14__opacity;
    const double s51 = params[51]; // Wave 15_r;
    const double s52 = params[52]; // Wave 15_g;
    const double s53 = params[53]; // Wave 15_b;
    const double s54 = params[54]; // Wave 15_a;
    const double s55 = params[55]; // x_Wave 15__opacity;
    const double s56 = params[56]; // Wave 16_r;
    const double s57 = params[57]; // Wave 16_g;
    const double s58 = params[58]; // Wave 16_b;
    const double s59 = params[59]; // Wave 16_a;
    const double s60 = params[60]; // x_Wave 16__opacity;
    const double s61 = params[61]; // Wave 17_r;
    const double s62 = params[62]; // Wave 17_g;
    const double s63 = params[63]; // Wave 17_b;
    const double s64 = params[64]; // Wave 17_a;
    const double s65 = params[65]; // x_Wave 17__opacity;
    const double s66 = params[66]; // Wave 18_r;
    const double s67 = params[67]; // Wave 18_g;
    const double s68 = params[68]; // Wave 18_b;
    const double s69 = params[69]; // Wave 18_a;
    const double s70 = params[70]; // x_Wave 18__opacity;
    const double s71 = params[71]; // Wave 19_r;
    const double s72 = params[72]; // Wave 19_g;
    const double s73 = params[73]; // Wave 19_b;
    const double s74 = params[74]; // Wave 19_a;
    const double s75 = params[75]; // x_Wave 19__opacity;
    const double s76 = params[76]; // Wave 2_r;
    const double s77 = params[77]; // Wave 2_g;
    const double s78 = params[78]; // Wave 2_b;
    const double s79 = params[79]; // Wave 2_a;
    const double s80 = params[80]; // x_Wave 2__opacity;
    const double s81 = params[81]; // Wave 3_r;
    const double s82 = params[82]; // Wave 3_g;
    const double s83 = params[83]; // Wave 3_b;
    const double s84 = params[84]; // Wave 3_a;
    const double s85 = params[85]; // x_Wave 3__opacity;
    const double s86 = params[86]; // Wave 4_r;
    const double s87 = params[87]; // Wave 4_g;
    const double s88 = params[88]; // Wave 4_b;
    const double s89 = params[89]; // Wave 4_a;
    const double s90 = params[90]; // x_Wave 4__opacity;
    const double s91 = params[91]; // Wave 5_r;
    const double s92 = params[92]; // Wave 5_g;
    const double s93 = params[93]; // Wave 5_b;
    const double s94 = params[94]; // Wave 5_a;
    const double s95 = params[95]; // x_Wave 5__opacity;
    const double s96 = params[96]; // Wave 6_r;
    const double s97 = params[97]; // Wave 6_g;
    const double s98 = params[98]; // Wave 6_b;
    const double s99 = params[99]; // Wave 6_a;
    const double s100 = params[100]; // x_Wave 6__opacity;
    const double s101 = params[101]; // Wave 7_r;
    const double s102 = params[102]; // Wave 7_g;
    const double s103 = params[103]; // Wave 7_b;
    const double s104 = params[104]; // Wave 7_a;
    const double s105 = params[105]; // x_Wave 7__opacity;
    const double s106 = params[106]; // Wave 8_r;
    const double s107 = params[107]; // Wave 8_g;
    const double s108 = params[108]; // Wave 8_b;
    const double s109 = params[109]; // Wave 8_a;
    const double s110 = params[110]; // x_Wave 8__opacity;
    const double s111 = params[111]; // Wave 9_r;
    const double s112 = params[112]; // Wave 9_g;
    const double s113 = params[113]; // Wave 9_b;
    const double s114 = params[114]; // Wave 9_a;
    const double s115 = params[115]; // x_Wave 9__opacity;
    const double s116 = params[116]; // x_Waves Brightness__opacity;
    const double s117 = params[117]; // x_Waves Brightness_gamma;
    const double s118 = params[118]; // x_Waves Brightness_inMax;
    const double s119 = params[119]; // x_Waves Brightness_inMin;
    const double s120 = params[120]; // x_Waves Brightness_outMax;
    const double s121 = params[121]; // x_Waves Brightness_outMin;
    const double s122 = 1.000000;
    const double s123 = s3 * s122;
    const double s124 = 0.000000;
    const double s125 = s124 * s123;
    const double s126 = 0.000000;
    const double s127 = s126 + s123;
    const double s128 = s127 - s125;
    const double s129 = s0 * s123;
    const double s130 = s1 * s123;
    const double s131 = s2 * s123;
    const double s132 = 1.000000;
    const double s133 = s132 - s123;
    const double s134 = 0.000000;
    const double s135 = s134 * s133;
    const double s136 = s129 + s135;
    vector<double> v137 = { s136, s128 };
    auto s137 = cvtT(v137);
    const double s138 = s137[0];
    const double s139 = 1.000000;
    const double s140 = s139 - s123;
    const double s141 = 0.000000;
    const double s142 = s141 * s140;
    const double s143 = s130 + s142;
    vector<double> v144 = { s143, s128 };
    auto s144 = cvtT(v144);
    const double s145 = s144[0];
    const double s146 = 1.000000;
    const double s147 = s146 - s123;
    const double s148 = 0.000000;
    const double s149 = s148 * s147;
    const double s150 = s131 + s149;
    vector<double> v151 = { s150, s128 };
    auto s151 = cvtT(v151);
    const double s152 = s151[0];
    const double s153 = 1.000000;
    const double s154 = s74 * s153;
    const double s155 = s128 * s154;
    const double s156 = s128 + s154;
    const double s157 = s156 - s155;
    const double s158 = s71 * s154;
    const double s159 = s72 * s154;
    const double s160 = s73 * s154;
    const double s161 = s138 * s128;
    const double s162 = s145 * s128;
    const double s163 = s152 * s128;
    const double s164 = 1.000000;
    const double s165 = s164 - s154;
    const double s166 = s161 * s165;
    const double s167 = s158 + s166;
    vector<double> v168 = { s167, s157 };
    auto s168 = cvtT(v168);
    const double s169 = s168[0];
    const double s170 = 1.000000;
    const double s171 = s170 - s154;
    const double s172 = s162 * s171;
    const double s173 = s159 + s172;
    vector<double> v174 = { s173, s157 };
    auto s174 = cvtT(v174);
    const double s175 = s174[0];
    const double s176 = 1.000000;
    const double s177 = s176 - s154;
    const double s178 = s163 * s177;
    const double s179 = s160 + s178;
    vector<double> v180 = { s179, s157 };
    auto s180 = cvtT(v180);
    const double s181 = s180[0];
    const double s182 = 1.000000;
    const double s183 = s69 * s182;
    const double s184 = s157 * s183;
    const double s185 = s157 + s183;
    const double s186 = s185 - s184;
    const double s187 = s66 * s183;
    const double s188 = s67 * s183;
    const double s189 = s68 * s183;
    const double s190 = s169 * s157;
    const double s191 = s175 * s157;
    const double s192 = s181 * s157;
    const double s193 = 1.000000;
    const double s194 = s193 - s183;
    const double s195 = s190 * s194;
    const double s196 = s187 + s195;
    vector<double> v197 = { s196, s186 };
    auto s197 = cvtT(v197);
    const double s198 = s197[0];
    const double s199 = 1.000000;
    const double s200 = s199 - s183;
    const double s201 = s191 * s200;
    const double s202 = s188 + s201;
    vector<double> v203 = { s202, s186 };
    auto s203 = cvtT(v203);
    const double s204 = s203[0];
    const double s205 = 1.000000;
    const double s206 = s205 - s183;
    const double s207 = s192 * s206;
    const double s208 = s189 + s207;
    vector<double> v209 = { s208, s186 };
    auto s209 = cvtT(v209);
    const double s210 = s209[0];
    const double s211 = 1.000000;
    const double s212 = s64 * s211;
    const double s213 = s186 * s212;
    const double s214 = s186 + s212;
    const double s215 = s214 - s213;
    const double s216 = s61 * s212;
    const double s217 = s62 * s212;
    const double s218 = s63 * s212;
    const double s219 = s198 * s186;
    const double s220 = s204 * s186;
    const double s221 = s210 * s186;
    const double s222 = 1.000000;
    const double s223 = s222 - s212;
    const double s224 = s219 * s223;
    const double s225 = s216 + s224;
    vector<double> v226 = { s225, s215 };
    auto s226 = cvtT(v226);
    const double s227 = s226[0];
    const double s228 = 1.000000;
    const double s229 = s228 - s212;
    const double s230 = s220 * s229;
    const double s231 = s217 + s230;
    vector<double> v232 = { s231, s215 };
    auto s232 = cvtT(v232);
    const double s233 = s232[0];
    const double s234 = 1.000000;
    const double s235 = s234 - s212;
    const double s236 = s221 * s235;
    const double s237 = s218 + s236;
    vector<double> v238 = { s237, s215 };
    auto s238 = cvtT(v238);
    const double s239 = s238[0];
    const double s240 = 1.000000;
    const double s241 = s59 * s240;
    const double s242 = s215 * s241;
    const double s243 = s215 + s241;
    const double s244 = s243 - s242;
    const double s245 = s56 * s241;
    const double s246 = s57 * s241;
    const double s247 = s58 * s241;
    const double s248 = s227 * s215;
    const double s249 = s233 * s215;
    const double s250 = s239 * s215;
    const double s251 = 1.000000;
    const double s252 = s251 - s241;
    const double s253 = s248 * s252;
    const double s254 = s245 + s253;
    vector<double> v255 = { s254, s244 };
    auto s255 = cvtT(v255);
    const double s256 = s255[0];
    const double s257 = 1.000000;
    const double s258 = s257 - s241;
    const double s259 = s249 * s258;
    const double s260 = s246 + s259;
    vector<double> v261 = { s260, s244 };
    auto s261 = cvtT(v261);
    const double s262 = s261[0];
    const double s263 = 1.000000;
    const double s264 = s263 - s241;
    const double s265 = s250 * s264;
    const double s266 = s247 + s265;
    vector<double> v267 = { s266, s244 };
    auto s267 = cvtT(v267);
    const double s268 = s267[0];
    const double s269 = 0.501961;
    const double s270 = s54 * s269;
    const double s271 = s244 * s270;
    const double s272 = s244 + s270;
    const double s273 = s272 - s271;
    const double s274 = s51 * s270;
    const double s275 = s52 * s270;
    const double s276 = s53 * s270;
    const double s277 = s256 * s244;
    const double s278 = s262 * s244;
    const double s279 = s268 * s244;
    const double s280 = 1.000000;
    const double s281 = s280 - s270;
    const double s282 = s277 * s281;
    const double s283 = s274 + s282;
    vector<double> v284 = { s283, s273 };
    auto s284 = cvtT(v284);
    const double s285 = s284[0];
    const double s286 = 1.000000;
    const double s287 = s286 - s270;
    const double s288 = s278 * s287;
    const double s289 = s275 + s288;
    vector<double> v290 = { s289, s273 };
    auto s290 = cvtT(v290);
    const double s291 = s290[0];
    const double s292 = 1.000000;
    const double s293 = s292 - s270;
    const double s294 = s279 * s293;
    const double s295 = s276 + s294;
    vector<double> v296 = { s295, s273 };
    auto s296 = cvtT(v296);
    const double s297 = s296[0];
    const double s298 = 1.000000;
    const double s299 = s49 * s298;
    const double s300 = s273 * s299;
    const double s301 = s273 + s299;
    const double s302 = s301 - s300;
    const double s303 = s46 * s299;
    const double s304 = s47 * s299;
    const double s305 = s48 * s299;
    const double s306 = s285 * s273;
    const double s307 = s291 * s273;
    const double s308 = s297 * s273;
    const double s309 = 1.000000;
    const double s310 = s309 - s299;
    const double s311 = s306 * s310;
    const double s312 = s303 + s311;
    vector<double> v313 = { s312, s302 };
    auto s313 = cvtT(v313);
    const double s314 = s313[0];
    const double s315 = 1.000000;
    const double s316 = s315 - s299;
    const double s317 = s307 * s316;
    const double s318 = s304 + s317;
    vector<double> v319 = { s318, s302 };
    auto s319 = cvtT(v319);
    const double s320 = s319[0];
    const double s321 = 1.000000;
    const double s322 = s321 - s299;
    const double s323 = s308 * s322;
    const double s324 = s305 + s323;
    vector<double> v325 = { s324, s302 };
    auto s325 = cvtT(v325);
    const double s326 = s325[0];
    const double s327 = 0.709804;
    const double s328 = s44 * s327;
    const double s329 = s302 * s328;
    const double s330 = s302 + s328;
    const double s331 = s330 - s329;
    const double s332 = s41 * s328;
    const double s333 = s42 * s328;
    const double s334 = s43 * s328;
    const double s335 = s314 * s302;
    const double s336 = s320 * s302;
    const double s337 = s326 * s302;
    vector<double> v338 = { s302, s328 };
    auto s338 = linearDodgeAlpha(v338);
    const double s339 = s338[0];
    const double s340 = s332 + s335;
    vector<double> v341 = { s340, s339 };
    auto s341 = cvtT(v341);
    const double s342 = s341[0];
    const double s343 = s333 + s336;
    vector<double> v344 = { s343, s339 };
    auto s344 = cvtT(v344);
    const double s345 = s344[0];
    const double s346 = s334 + s337;
    vector<double> v347 = { s346, s339 };
    auto s347 = cvtT(v347);
    const double s348 = s347[0];
    const double s349 = 0.301961;
    const double s350 = s39 * s349;
    const double s351 = s339 * s350;
    const double s352 = s339 + s350;
    const double s353 = s352 - s351;
    const double s354 = s36 * s350;
    const double s355 = s37 * s350;
    const double s356 = s38 * s350;
    const double s357 = s342 * s339;
    const double s358 = s345 * s339;
    const double s359 = s348 * s339;
    const double s360 = 1.000000;
    const double s361 = s360 - s350;
    const double s362 = s357 * s361;
    const double s363 = s354 + s362;
    vector<double> v364 = { s363, s353 };
    auto s364 = cvtT(v364);
    const double s365 = s364[0];
    const double s366 = 1.000000;
    const double s367 = s366 - s350;
    const double s368 = s358 * s367;
    const double s369 = s355 + s368;
    vector<double> v370 = { s369, s353 };
    auto s370 = cvtT(v370);
    const double s371 = s370[0];
    const double s372 = 1.000000;
    const double s373 = s372 - s350;
    const double s374 = s359 * s373;
    const double s375 = s356 + s374;
    vector<double> v376 = { s375, s353 };
    auto s376 = cvtT(v376);
    const double s377 = s376[0];
    const double s378 = 0.301961;
    const double s379 = s34 * s378;
    const double s380 = s353 * s379;
    const double s381 = s353 + s379;
    const double s382 = s381 - s380;
    const double s383 = s31 * s379;
    const double s384 = s32 * s379;
    const double s385 = s33 * s379;
    const double s386 = s365 * s353;
    const double s387 = s371 * s353;
    const double s388 = s377 * s353;
    const double s389 = 1.000000;
    const double s390 = s389 - s379;
    const double s391 = s386 * s390;
    const double s392 = s383 + s391;
    vector<double> v393 = { s392, s382 };
    auto s393 = cvtT(v393);
    const double s394 = s393[0];
    const double s395 = 1.000000;
    const double s396 = s395 - s379;
    const double s397 = s387 * s396;
    const double s398 = s384 + s397;
    vector<double> v399 = { s398, s382 };
    auto s399 = cvtT(v399);
    const double s400 = s399[0];
    const double s401 = 1.000000;
    const double s402 = s401 - s379;
    const double s403 = s388 * s402;
    const double s404 = s385 + s403;
    vector<double> v405 = { s404, s382 };
    auto s405 = cvtT(v405);
    const double s406 = s405[0];
    const double s407 = 0.200000;
    const double s408 = s29 * s407;
    const double s409 = s382 * s408;
    const double s410 = s382 + s408;
    const double s411 = s410 - s409;
    const double s412 = s26 * s408;
    const double s413 = s27 * s408;
    const double s414 = s28 * s408;
    const double s415 = s394 * s382;
    const double s416 = s400 * s382;
    const double s417 = s406 * s382;
    const double s418 = 1.000000;
    const double s419 = s418 - s408;
    const double s420 = s415 * s419;
    const double s421 = s412 + s420;
    vector<double> v422 = { s421, s411 };
    auto s422 = cvtT(v422);
    const double s423 = s422[0];
    const double s424 = 1.000000;
    const double s425 = s424 - s408;
    const double s426 = s416 * s425;
    const double s427 = s413 + s426;
    vector<double> v428 = { s427, s411 };
    auto s428 = cvtT(v428);
    const double s429 = s428[0];
    const double s430 = 1.000000;
    const double s431 = s430 - s408;
    const double s432 = s417 * s431;
    const double s433 = s414 + s432;
    vector<double> v434 = { s433, s411 };
    auto s434 = cvtT(v434);
    const double s435 = s434[0];
    const double s436 = 1.000000;
    const double s437 = s114 * s436;
    const double s438 = s411 * s437;
    const double s439 = s411 + s437;
    const double s440 = s439 - s438;
    const double s441 = s111 * s437;
    const double s442 = s112 * s437;
    const double s443 = s113 * s437;
    const double s444 = s423 * s411;
    const double s445 = s429 * s411;
    const double s446 = s435 * s411;
    vector<double> v447 = { s411, s437 };
    auto s447 = linearDodgeAlpha(v447);
    const double s448 = s447[0];
    const double s449 = s441 + s444;
    vector<double> v450 = { s449, s448 };
    auto s450 = cvtT(v450);
    const double s451 = s450[0];
    const double s452 = s442 + s445;
    vector<double> v453 = { s452, s448 };
    auto s453 = cvtT(v453);
    const double s454 = s453[0];
    const double s455 = s443 + s446;
    vector<double> v456 = { s455, s448 };
    auto s456 = cvtT(v456);
    const double s457 = s456[0];
    const double s458 = 1.000000;
    const double s459 = s109 * s458;
    const double s460 = s448 * s459;
    const double s461 = s448 + s459;
    const double s462 = s461 - s460;
    const double s463 = s106 * s459;
    const double s464 = s107 * s459;
    const double s465 = s108 * s459;
    const double s466 = s451 * s448;
    const double s467 = s454 * s448;
    const double s468 = s457 * s448;
    vector<double> v469 = { s466, s463, s448, s459 };
    auto s469 = softLight(v469);
    const double s470 = s469[0];
    vector<double> v471 = { s470, s462 };
    auto s471 = cvtT(v471);
    const double s472 = s471[0];
    vector<double> v473 = { s467, s464, s448, s459 };
    auto s473 = softLight(v473);
    const double s474 = s473[0];
    vector<double> v475 = { s474, s462 };
    auto s475 = cvtT(v475);
    const double s476 = s475[0];
    vector<double> v477 = { s468, s465, s448, s459 };
    auto s477 = softLight(v477);
    const double s478 = s477[0];
    vector<double> v479 = { s478, s462 };
    auto s479 = cvtT(v479);
    const double s480 = s479[0];
    const double s481 = 1.000000;
    const double s482 = s104 * s481;
    const double s483 = s462 * s482;
    const double s484 = s462 + s482;
    const double s485 = s484 - s483;
    const double s486 = s101 * s482;
    const double s487 = s102 * s482;
    const double s488 = s103 * s482;
    const double s489 = s472 * s462;
    const double s490 = s476 * s462;
    const double s491 = s480 * s462;
    const double s492 = 1.000000;
    const double s493 = s492 - s482;
    const double s494 = s489 * s493;
    const double s495 = s486 + s494;
    vector<double> v496 = { s495, s485 };
    auto s496 = cvtT(v496);
    const double s497 = s496[0];
    const double s498 = 1.000000;
    const double s499 = s498 - s482;
    const double s500 = s490 * s499;
    const double s501 = s487 + s500;
    vector<double> v502 = { s501, s485 };
    auto s502 = cvtT(v502);
    const double s503 = s502[0];
    const double s504 = 1.000000;
    const double s505 = s504 - s482;
    const double s506 = s491 * s505;
    const double s507 = s488 + s506;
    vector<double> v508 = { s507, s485 };
    auto s508 = cvtT(v508);
    const double s509 = s508[0];
    const double s510 = 1.000000;
    const double s511 = s99 * s510;
    const double s512 = s485 * s511;
    const double s513 = s485 + s511;
    const double s514 = s513 - s512;
    const double s515 = s96 * s511;
    const double s516 = s97 * s511;
    const double s517 = s98 * s511;
    const double s518 = s497 * s485;
    const double s519 = s503 * s485;
    const double s520 = s509 * s485;
    const double s521 = 1.000000;
    const double s522 = s521 - s511;
    const double s523 = s518 * s522;
    const double s524 = s515 + s523;
    vector<double> v525 = { s524, s514 };
    auto s525 = cvtT(v525);
    const double s526 = s525[0];
    const double s527 = 1.000000;
    const double s528 = s527 - s511;
    const double s529 = s519 * s528;
    const double s530 = s516 + s529;
    vector<double> v531 = { s530, s514 };
    auto s531 = cvtT(v531);
    const double s532 = s531[0];
    const double s533 = 1.000000;
    const double s534 = s533 - s511;
    const double s535 = s520 * s534;
    const double s536 = s517 + s535;
    vector<double> v537 = { s536, s514 };
    auto s537 = cvtT(v537);
    const double s538 = s537[0];
    const double s539 = 1.000000;
    const double s540 = s94 * s539;
    const double s541 = s514 * s540;
    const double s542 = s514 + s540;
    const double s543 = s542 - s541;
    const double s544 = s91 * s540;
    const double s545 = s92 * s540;
    const double s546 = s93 * s540;
    const double s547 = s526 * s514;
    const double s548 = s532 * s514;
    const double s549 = s538 * s514;
    vector<double> v550 = { s514, s540 };
    auto s550 = linearDodgeAlpha(v550);
    const double s551 = s550[0];
    const double s552 = s544 + s547;
    vector<double> v553 = { s552, s551 };
    auto s553 = cvtT(v553);
    const double s554 = s553[0];
    const double s555 = s545 + s548;
    vector<double> v556 = { s555, s551 };
    auto s556 = cvtT(v556);
    const double s557 = s556[0];
    const double s558 = s546 + s549;
    vector<double> v559 = { s558, s551 };
    auto s559 = cvtT(v559);
    const double s560 = s559[0];
    const double s561 = 1.000000;
    const double s562 = s89 * s561;
    const double s563 = s551 * s562;
    const double s564 = s551 + s562;
    const double s565 = s564 - s563;
    const double s566 = s86 * s562;
    const double s567 = s87 * s562;
    const double s568 = s88 * s562;
    const double s569 = s554 * s551;
    const double s570 = s557 * s551;
    const double s571 = s560 * s551;
    vector<double> v572 = { s569, s566, s551, s562 };
    auto s572 = lighten(v572);
    const double s573 = s572[0];
    vector<double> v574 = { s573, s565 };
    auto s574 = cvtT(v574);
    const double s575 = s574[0];
    vector<double> v576 = { s570, s567, s551, s562 };
    auto s576 = lighten(v576);
    const double s577 = s576[0];
    vector<double> v578 = { s577, s565 };
    auto s578 = cvtT(v578);
    const double s579 = s578[0];
    vector<double> v580 = { s571, s568, s551, s562 };
    auto s580 = lighten(v580);
    const double s581 = s580[0];
    vector<double> v582 = { s581, s565 };
    auto s582 = cvtT(v582);
    const double s583 = s582[0];
    const double s584 = 0.501961;
    const double s585 = s84 * s584;
    const double s586 = s565 * s585;
    const double s587 = s565 + s585;
    const double s588 = s587 - s586;
    const double s589 = s81 * s585;
    const double s590 = s82 * s585;
    const double s591 = s83 * s585;
    const double s592 = s575 * s565;
    const double s593 = s579 * s565;
    const double s594 = s583 * s565;
    vector<double> v595 = { s565, s585 };
    auto s595 = linearDodgeAlpha(v595);
    const double s596 = s595[0];
    const double s597 = s589 + s592;
    vector<double> v598 = { s597, s596 };
    auto s598 = cvtT(v598);
    const double s599 = s598[0];
    const double s600 = s590 + s593;
    vector<double> v601 = { s600, s596 };
    auto s601 = cvtT(v601);
    const double s602 = s601[0];
    const double s603 = s591 + s594;
    vector<double> v604 = { s603, s596 };
    auto s604 = cvtT(v604);
    const double s605 = s604[0];
    const double s606 = 1.000000;
    const double s607 = s79 * s606;
    const double s608 = s596 * s607;
    const double s609 = s596 + s607;
    const double s610 = s609 - s608;
    const double s611 = s76 * s607;
    const double s612 = s77 * s607;
    const double s613 = s78 * s607;
    const double s614 = s599 * s596;
    const double s615 = s602 * s596;
    const double s616 = s605 * s596;
    const double s617 = 1.000000;
    const double s618 = s617 - s607;
    const double s619 = s614 * s618;
    const double s620 = s611 + s619;
    vector<double> v621 = { s620, s610 };
    auto s621 = cvtT(v621);
    const double s622 = s621[0];
    const double s623 = 1.000000;
    const double s624 = s623 - s607;
    const double s625 = s615 * s624;
    const double s626 = s612 + s625;
    vector<double> v627 = { s626, s610 };
    auto s627 = cvtT(v627);
    const double s628 = s627[0];
    const double s629 = 1.000000;
    const double s630 = s629 - s607;
    const double s631 = s616 * s630;
    const double s632 = s613 + s631;
    vector<double> v633 = { s632, s610 };
    auto s633 = cvtT(v633);
    const double s634 = s633[0];
    const double s635 = 0.501961;
    const double s636 = s24 * s635;
    const double s637 = s610 * s636;
    const double s638 = s610 + s636;
    const double s639 = s638 - s637;
    const double s640 = s21 * s636;
    const double s641 = s22 * s636;
    const double s642 = s23 * s636;
    const double s643 = s622 * s610;
    const double s644 = s628 * s610;
    const double s645 = s634 * s610;
    const double s646 = 1.000000;
    const double s647 = s646 - s636;
    const double s648 = s643 * s647;
    const double s649 = s640 + s648;
    vector<double> v650 = { s649, s639 };
    auto s650 = cvtT(v650);
    const double s651 = s650[0];
    const double s652 = 1.000000;
    const double s653 = s652 - s636;
    const double s654 = s644 * s653;
    const double s655 = s641 + s654;
    vector<double> v656 = { s655, s639 };
    auto s656 = cvtT(v656);
    const double s657 = s656[0];
    const double s658 = 1.000000;
    const double s659 = s658 - s636;
    const double s660 = s645 * s659;
    const double s661 = s642 + s660;
    vector<double> v662 = { s661, s639 };
    auto s662 = cvtT(v662);
    const double s663 = s662[0];
    const double s664 = 0.109804;
    const double s665 = s19 * s664;
    const double s666 = s639 * s665;
    const double s667 = s639 + s665;
    const double s668 = s667 - s666;
    const double s669 = s16 * s665;
    const double s670 = s17 * s665;
    const double s671 = s18 * s665;
    const double s672 = s651 * s639;
    const double s673 = s657 * s639;
    const double s674 = s663 * s639;
    vector<double> v675 = { s672, s669, s639, s665 };
    auto s675 = softLight(v675);
    const double s676 = s675[0];
    vector<double> v677 = { s676, s668 };
    auto s677 = cvtT(v677);
    const double s678 = s677[0];
    vector<double> v679 = { s673, s670, s639, s665 };
    auto s679 = softLight(v679);
    const double s680 = s679[0];
    vector<double> v681 = { s680, s668 };
    auto s681 = cvtT(v681);
    const double s682 = s681[0];
    vector<double> v683 = { s674, s671, s639, s665 };
    auto s683 = softLight(v683);
    const double s684 = s683[0];
    vector<double> v685 = { s684, s668 };
    auto s685 = cvtT(v685);
    const double s686 = s685[0];
    vector<double> v687 = { s678, s682, s686 };
    auto s687 = RGBToHSL(v687);
    const double s688 = s687[0];
    const double s689 = s687[1];
    const double s690 = s687[2];
    const double s691 = s688 + s13;
    const double s692 = 100.000000;
    const double s693 = s15 / s692;
    const double s694 = s689 + s693;
    const double s695 = 100.000000;
    const double s696 = s14 / s695;
    const double s697 = s690 + s696;
    vector<double> v698 = { s691, s694, s697 };
    auto s698 = HSLToRGB(v698);
    const double s699 = s698[0];
    const double s700 = s698[1];
    const double s701 = s698[2];
    const double s702 = 1.000000;
    const double s703 = s668 * s702;
    const double s704 = s668 * s703;
    const double s705 = s668 + s703;
    const double s706 = s705 - s704;
    const double s707 = s699 * s703;
    const double s708 = s700 * s703;
    const double s709 = s701 * s703;
    const double s710 = s678 * s668;
    const double s711 = s682 * s668;
    const double s712 = s686 * s668;
    const double s713 = 1.000000;
    const double s714 = s713 - s703;
    const double s715 = s710 * s714;
    const double s716 = s707 + s715;
    vector<double> v717 = { s716, s706 };
    auto s717 = cvtT(v717);
    const double s718 = s717[0];
    const double s719 = 1.000000;
    const double s720 = s719 - s703;
    const double s721 = s711 * s720;
    const double s722 = s708 + s721;
    vector<double> v723 = { s722, s706 };
    auto s723 = cvtT(v723);
    const double s724 = s723[0];
    const double s725 = 1.000000;
    const double s726 = s725 - s703;
    const double s727 = s712 * s726;
    const double s728 = s709 + s727;
    vector<double> v729 = { s728, s706 };
    auto s729 = cvtT(v729);
    const double s730 = s729[0];
    const double s731 = 0.114000;
    const double s732 = s731 * s730;
    const double s733 = 0.587000;
    const double s734 = s733 * s724;
    const double s735 = 0.299000;
    const double s736 = s735 * s718;
    const double s737 = s736 + s734;
    const double s738 = s737 + s732;
    const double s739 = 0.000000;
    const double s740 = s738 - s739;
    const double s741 = 1.000000;
    const double s742 = s740 / s741;
    const double s743 = 1.000000;
    const double s744 = s743 * s742;
    const double s745 = 1.000000;
    const double s746 = s745 - s742;
    const double s747 = 0.000000;
    const double s748 = s747 * s746;
    const double s749 = s748 + s744;
    const double s750 = 1.000000;
    const double s751 = s750 * s742;
    const double s752 = 1.000000;
    const double s753 = s752 - s742;
    const double s754 = 0.000000;
    const double s755 = s754 * s753;
    const double s756 = s755 + s751;
    const double s757 = 1.000000;
    const double s758 = s757 * s742;
    const double s759 = 1.000000;
    const double s760 = s759 - s742;
    const double s761 = 0.000000;
    const double s762 = s761 * s760;
    const double s763 = s762 + s758;
    const double s764 = 0.000000;
    const double s765 = 1.000000;
    vector<double> v766 = { s749, s764, s765 };
    auto s766 = clamp(v766);
    const double s767 = s766[0];
    const double s768 = 0.000000;
    const double s769 = 1.000000;
    vector<double> v770 = { s756, s768, s769 };
    auto s770 = clamp(v770);
    const double s771 = s770[0];
    const double s772 = 0.000000;
    const double s773 = 1.000000;
    vector<double> v774 = { s763, s772, s773 };
    auto s774 = clamp(v774);
    const double s775 = s774[0];
    const double s776 = 0.160784;
    const double s777 = s706 * s776;
    const double s778 = s706 * s777;
    const double s779 = s706 + s777;
    const double s780 = s779 - s778;
    const double s781 = s767 * s777;
    const double s782 = s771 * s777;
    const double s783 = s775 * s777;
    const double s784 = s718 * s706;
    const double s785 = s724 * s706;
    const double s786 = s730 * s706;
    vector<double> v787 = { s784, s781, s706, s777 };
    auto s787 = overlay(v787);
    const double s788 = s787[0];
    vector<double> v789 = { s788, s780 };
    auto s789 = cvtT(v789);
    const double s790 = s789[0];
    vector<double> v791 = { s785, s782, s706, s777 };
    auto s791 = overlay(v791);
    const double s792 = s791[0];
    vector<double> v793 = { s792, s780 };
    auto s793 = cvtT(v793);
    const double s794 = s793[0];
    vector<double> v795 = { s786, s783, s706, s777 };
    auto s795 = overlay(v795);
    const double s796 = s795[0];
    vector<double> v797 = { s796, s780 };
    auto s797 = cvtT(v797);
    const double s798 = s797[0];
    const double s799 = 255.000000;
    const double s800 = s120 / s799;
    const double s801 = 255.000000;
    const double s802 = s121 / s801;
    const double s803 = 255.000000;
    const double s804 = s118 / s803;
    const double s805 = 255.000000;
    const double s806 = s119 / s805;
    vector<double> v807 = { s790, s806, s804, s117, s802, s800 };
    auto s807 = levels(v807);
    const double s808 = s807[0];
    const double s809 = 0.000000;
    const double s810 = 1.000000;
    vector<double> v811 = { s808, s809, s810 };
    auto s811 = clamp(v811);
    const double s812 = s811[0];
    const double s813 = 255.000000;
    const double s814 = s120 / s813;
    const double s815 = 255.000000;
    const double s816 = s121 / s815;
    const double s817 = 255.000000;
    const double s818 = s118 / s817;
    const double s819 = 255.000000;
    const double s820 = s119 / s819;
    vector<double> v821 = { s794, s820, s818, s117, s816, s814 };
    auto s821 = levels(v821);
    const double s822 = s821[0];
    const double s823 = 0.000000;
    const double s824 = 1.000000;
    vector<double> v825 = { s822, s823, s824 };
    auto s825 = clamp(v825);
    const double s826 = s825[0];
    const double s827 = 255.000000;
    const double s828 = s120 / s827;
    const double s829 = 255.000000;
    const double s830 = s121 / s829;
    const double s831 = 255.000000;
    const double s832 = s118 / s831;
    const double s833 = 255.000000;
    const double s834 = s119 / s833;
    vector<double> v835 = { s798, s834, s832, s117, s830, s828 };
    auto s835 = levels(v835);
    const double s836 = s835[0];
    const double s837 = 0.000000;
    const double s838 = 1.000000;
    vector<double> v839 = { s836, s837, s838 };
    auto s839 = clamp(v839);
    const double s840 = s839[0];
    const double s841 = 1.000000;
    const double s842 = s780 * s841;
    const double s843 = s780 * s842;
    const double s844 = s780 + s842;
    const double s845 = s844 - s843;
    const double s846 = s812 * s842;
    const double s847 = s826 * s842;
    const double s848 = s840 * s842;
    const double s849 = s790 * s780;
    const double s850 = s794 * s780;
    const double s851 = s798 * s780;
    const double s852 = 1.000000;
    const double s853 = s852 - s842;
    const double s854 = s849 * s853;
    const double s855 = s846 + s854;
    vector<double> v856 = { s855, s845 };
    auto s856 = cvtT(v856);
    const double s857 = s856[0];
    const double s858 = 1.000000;
    const double s859 = s858 - s842;
    const double s860 = s850 * s859;
    const double s861 = s847 + s860;
    vector<double> v862 = { s861, s845 };
    auto s862 = cvtT(v862);
    const double s863 = s862[0];
    const double s864 = 1.000000;
    const double s865 = s864 - s842;
    const double s866 = s851 * s865;
    const double s867 = s848 + s866;
    vector<double> v868 = { s867, s845 };
    auto s868 = cvtT(v868);
    const double s869 = s868[0];
    const double s870 = 1.000000;
    const double s871 = s10 * s870;
    const double s872 = s845 * s871;
    const double s873 = s845 + s871;
    const double s874 = s873 - s872;
    const double s875 = s7 * s871;
    const double s876 = s8 * s871;
    const double s877 = s9 * s871;
    const double s878 = s857 * s845;
    const double s879 = s863 * s845;
    const double s880 = s869 * s845;
    const double s881 = 1.000000;
    const double s882 = s881 - s871;
    const double s883 = s878 * s882;
    const double s884 = s875 + s883;
    vector<double> v885 = { s884, s874 };
    auto s885 = cvtT(v885);
    const double s886 = s885[0];
    const double s887 = 1.000000;
    const double s888 = s887 - s871;
    const double s889 = s879 * s888;
    const double s890 = s876 + s889;
    vector<double> v891 = { s890, s874 };
    auto s891 = cvtT(v891);
    const double s892 = s891[0];
    const double s893 = 1.000000;
    const double s894 = s893 - s871;
    const double s895 = s880 * s894;
    const double s896 = s877 + s895;
    vector<double> v897 = { s896, s874 };
    auto s897 = cvtT(v897);
    const double s898 = s897[0];
    result[0] = s886; // R;
    result[1] = s892; // G;
    result[2] = s898; // B;
    result[3] = s874; // A;
    
    return result;
}
