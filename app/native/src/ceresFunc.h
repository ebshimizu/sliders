static const int ceresFunc_paramACount = 151;
static const int ceresFunc_paramBCount = 192;

template <class T>
vector<T> ceresFunc(const T* const paramsA, const vector<double> &paramsB)
{
    vector<T> result(4);
    
    const T s0 = (T) paramsB[0]; // Background_r;
    const T s1 = (T) paramsB[1]; // Background_g;
    const T s2 = (T) paramsB[2]; // Background_b;
    const T s3 = (T) paramsB[3]; // Background_a;
    const T s4 = (T) paramsA[0]; // x_Background_opacity;
    const T s5 = (T) paramsB[4]; // Background Blur 2_r;
    const T s6 = (T) paramsB[5]; // Background Blur 2_g;
    const T s7 = (T) paramsB[6]; // Background Blur 2_b;
    const T s8 = (T) paramsB[7]; // Background Blur 2_a;
    const T s9 = (T) paramsA[1]; // x_Background Blur 2_opacity;
    const T s10 = (T) paramsB[8]; // Background Blur 1_r;
    const T s11 = (T) paramsB[9]; // Background Blur 1_g;
    const T s12 = (T) paramsB[10]; // Background Blur 1_b;
    const T s13 = (T) paramsB[11]; // Background Blur 1_a;
    const T s14 = (T) paramsA[2]; // x_Background Blur 1_opacity;
    const T s15 = (T) paramsB[12]; // Background Tint_r;
    const T s16 = (T) paramsB[13]; // Background Tint_g;
    const T s17 = (T) paramsB[14]; // Background Tint_b;
    const T s18 = (T) paramsB[15]; // Background Tint_a;
    const T s19 = (T) paramsA[3]; // x_Background Tint_opacity;
    const T s20 = (T) paramsA[4]; // x_Background Tint_a;
    const T s21 = (T) paramsA[5]; // x_Background Tint_b;
    const T s22 = (T) paramsA[6]; // x_Background Tint_g;
    const T s23 = (T) paramsA[7]; // x_Background Tint_r;
    const T s24 = (T) paramsB[16]; // b12_r;
    const T s25 = (T) paramsB[17]; // b12_g;
    const T s26 = (T) paramsB[18]; // b12_b;
    const T s27 = (T) paramsB[19]; // b12_a;
    const T s28 = (T) paramsA[8]; // x_b12_opacity;
    const T s29 = (T) paramsB[20]; // b11_r;
    const T s30 = (T) paramsB[21]; // b11_g;
    const T s31 = (T) paramsB[22]; // b11_b;
    const T s32 = (T) paramsB[23]; // b11_a;
    const T s33 = (T) paramsA[9]; // x_b11_opacity;
    const T s34 = (T) paramsB[24]; // b10_r;
    const T s35 = (T) paramsB[25]; // b10_g;
    const T s36 = (T) paramsB[26]; // b10_b;
    const T s37 = (T) paramsB[27]; // b10_a;
    const T s38 = (T) paramsA[10]; // x_b10_opacity;
    const T s39 = (T) paramsB[28]; // b9_r;
    const T s40 = (T) paramsB[29]; // b9_g;
    const T s41 = (T) paramsB[30]; // b9_b;
    const T s42 = (T) paramsB[31]; // b9_a;
    const T s43 = (T) paramsA[11]; // x_b9_opacity;
    const T s44 = (T) paramsB[32]; // b8_r;
    const T s45 = (T) paramsB[33]; // b8_g;
    const T s46 = (T) paramsB[34]; // b8_b;
    const T s47 = (T) paramsB[35]; // b8_a;
    const T s48 = (T) paramsA[12]; // x_b8_opacity;
    const T s49 = (T) paramsB[36]; // b7_r;
    const T s50 = (T) paramsB[37]; // b7_g;
    const T s51 = (T) paramsB[38]; // b7_b;
    const T s52 = (T) paramsB[39]; // b7_a;
    const T s53 = (T) paramsA[13]; // x_b7_opacity;
    const T s54 = (T) paramsB[40]; // b6_r;
    const T s55 = (T) paramsB[41]; // b6_g;
    const T s56 = (T) paramsB[42]; // b6_b;
    const T s57 = (T) paramsB[43]; // b6_a;
    const T s58 = (T) paramsA[14]; // x_b6_opacity;
    const T s59 = (T) paramsB[44]; // b5_r;
    const T s60 = (T) paramsB[45]; // b5_g;
    const T s61 = (T) paramsB[46]; // b5_b;
    const T s62 = (T) paramsB[47]; // b5_a;
    const T s63 = (T) paramsA[15]; // x_b5_opacity;
    const T s64 = (T) paramsB[48]; // b4_r;
    const T s65 = (T) paramsB[49]; // b4_g;
    const T s66 = (T) paramsB[50]; // b4_b;
    const T s67 = (T) paramsB[51]; // b4_a;
    const T s68 = (T) paramsA[16]; // x_b4_opacity;
    const T s69 = (T) paramsB[52]; // b3_r;
    const T s70 = (T) paramsB[53]; // b3_g;
    const T s71 = (T) paramsB[54]; // b3_b;
    const T s72 = (T) paramsB[55]; // b3_a;
    const T s73 = (T) paramsA[17]; // x_b3_opacity;
    const T s74 = (T) paramsB[56]; // b2_r;
    const T s75 = (T) paramsB[57]; // b2_g;
    const T s76 = (T) paramsB[58]; // b2_b;
    const T s77 = (T) paramsB[59]; // b2_a;
    const T s78 = (T) paramsA[18]; // x_b2_opacity;
    const T s79 = (T) paramsB[60]; // b1_r;
    const T s80 = (T) paramsB[61]; // b1_g;
    const T s81 = (T) paramsB[62]; // b1_b;
    const T s82 = (T) paramsB[63]; // b1_a;
    const T s83 = (T) paramsA[19]; // x_b1_opacity;
    const T s84 = (T) paramsB[64]; // a30_r;
    const T s85 = (T) paramsB[65]; // a30_g;
    const T s86 = (T) paramsB[66]; // a30_b;
    const T s87 = (T) paramsB[67]; // a30_a;
    const T s88 = (T) paramsA[20]; // x_a30_opacity;
    const T s89 = (T) paramsA[21]; // x_a30_hue;
    const T s90 = (T) paramsA[22]; // x_a30_light;
    const T s91 = (T) paramsA[23]; // x_a30_sat;
    const T s92 = (T) paramsB[68]; // a29_r;
    const T s93 = (T) paramsB[69]; // a29_g;
    const T s94 = (T) paramsB[70]; // a29_b;
    const T s95 = (T) paramsB[71]; // a29_a;
    const T s96 = (T) paramsA[24]; // x_a29_opacity;
    const T s97 = (T) paramsA[25]; // x_a29_hue;
    const T s98 = (T) paramsA[26]; // x_a29_light;
    const T s99 = (T) paramsA[27]; // x_a29_sat;
    const T s100 = (T) paramsB[72]; // a28_r;
    const T s101 = (T) paramsB[73]; // a28_g;
    const T s102 = (T) paramsB[74]; // a28_b;
    const T s103 = (T) paramsB[75]; // a28_a;
    const T s104 = (T) paramsA[28]; // x_a28_opacity;
    const T s105 = (T) paramsA[29]; // x_a28_hue;
    const T s106 = (T) paramsA[30]; // x_a28_light;
    const T s107 = (T) paramsA[31]; // x_a28_sat;
    const T s108 = (T) paramsB[76]; // a27_r;
    const T s109 = (T) paramsB[77]; // a27_g;
    const T s110 = (T) paramsB[78]; // a27_b;
    const T s111 = (T) paramsB[79]; // a27_a;
    const T s112 = (T) paramsA[32]; // x_a27_opacity;
    const T s113 = (T) paramsA[33]; // x_a27_hue;
    const T s114 = (T) paramsA[34]; // x_a27_light;
    const T s115 = (T) paramsA[35]; // x_a27_sat;
    const T s116 = (T) paramsB[80]; // a26_r;
    const T s117 = (T) paramsB[81]; // a26_g;
    const T s118 = (T) paramsB[82]; // a26_b;
    const T s119 = (T) paramsB[83]; // a26_a;
    const T s120 = (T) paramsA[36]; // x_a26_opacity;
    const T s121 = (T) paramsA[37]; // x_a26_hue;
    const T s122 = (T) paramsA[38]; // x_a26_light;
    const T s123 = (T) paramsA[39]; // x_a26_sat;
    const T s124 = (T) paramsB[84]; // a25_r;
    const T s125 = (T) paramsB[85]; // a25_g;
    const T s126 = (T) paramsB[86]; // a25_b;
    const T s127 = (T) paramsB[87]; // a25_a;
    const T s128 = (T) paramsA[40]; // x_a25_opacity;
    const T s129 = (T) paramsA[41]; // x_a25_hue;
    const T s130 = (T) paramsA[42]; // x_a25_light;
    const T s131 = (T) paramsA[43]; // x_a25_sat;
    const T s132 = (T) paramsB[88]; // a24_r;
    const T s133 = (T) paramsB[89]; // a24_g;
    const T s134 = (T) paramsB[90]; // a24_b;
    const T s135 = (T) paramsB[91]; // a24_a;
    const T s136 = (T) paramsA[44]; // x_a24_opacity;
    const T s137 = (T) paramsA[45]; // x_a24_hue;
    const T s138 = (T) paramsA[46]; // x_a24_light;
    const T s139 = (T) paramsA[47]; // x_a24_sat;
    const T s140 = (T) paramsB[92]; // a23_r;
    const T s141 = (T) paramsB[93]; // a23_g;
    const T s142 = (T) paramsB[94]; // a23_b;
    const T s143 = (T) paramsB[95]; // a23_a;
    const T s144 = (T) paramsA[48]; // x_a23_opacity;
    const T s145 = (T) paramsA[49]; // x_a23_hue;
    const T s146 = (T) paramsA[50]; // x_a23_light;
    const T s147 = (T) paramsA[51]; // x_a23_sat;
    const T s148 = (T) paramsB[96]; // a22_r;
    const T s149 = (T) paramsB[97]; // a22_g;
    const T s150 = (T) paramsB[98]; // a22_b;
    const T s151 = (T) paramsB[99]; // a22_a;
    const T s152 = (T) paramsA[52]; // x_a22_opacity;
    const T s153 = (T) paramsA[53]; // x_a22_hue;
    const T s154 = (T) paramsA[54]; // x_a22_light;
    const T s155 = (T) paramsA[55]; // x_a22_sat;
    const T s156 = (T) paramsB[100]; // a21_r;
    const T s157 = (T) paramsB[101]; // a21_g;
    const T s158 = (T) paramsB[102]; // a21_b;
    const T s159 = (T) paramsB[103]; // a21_a;
    const T s160 = (T) paramsA[56]; // x_a21_opacity;
    const T s161 = (T) paramsA[57]; // x_a21_hue;
    const T s162 = (T) paramsA[58]; // x_a21_light;
    const T s163 = (T) paramsA[59]; // x_a21_sat;
    const T s164 = (T) paramsB[104]; // a20_r;
    const T s165 = (T) paramsB[105]; // a20_g;
    const T s166 = (T) paramsB[106]; // a20_b;
    const T s167 = (T) paramsB[107]; // a20_a;
    const T s168 = (T) paramsA[60]; // x_a20_opacity;
    const T s169 = (T) paramsA[61]; // x_a20_hue;
    const T s170 = (T) paramsA[62]; // x_a20_light;
    const T s171 = (T) paramsA[63]; // x_a20_sat;
    const T s172 = (T) paramsB[108]; // a19_r;
    const T s173 = (T) paramsB[109]; // a19_g;
    const T s174 = (T) paramsB[110]; // a19_b;
    const T s175 = (T) paramsB[111]; // a19_a;
    const T s176 = (T) paramsA[64]; // x_a19_opacity;
    const T s177 = (T) paramsA[65]; // x_a19_hue;
    const T s178 = (T) paramsA[66]; // x_a19_light;
    const T s179 = (T) paramsA[67]; // x_a19_sat;
    const T s180 = (T) paramsB[112]; // a18_r;
    const T s181 = (T) paramsB[113]; // a18_g;
    const T s182 = (T) paramsB[114]; // a18_b;
    const T s183 = (T) paramsB[115]; // a18_a;
    const T s184 = (T) paramsA[68]; // x_a18_opacity;
    const T s185 = (T) paramsA[69]; // x_a18_hue;
    const T s186 = (T) paramsA[70]; // x_a18_light;
    const T s187 = (T) paramsA[71]; // x_a18_sat;
    const T s188 = (T) paramsB[116]; // a17_r;
    const T s189 = (T) paramsB[117]; // a17_g;
    const T s190 = (T) paramsB[118]; // a17_b;
    const T s191 = (T) paramsB[119]; // a17_a;
    const T s192 = (T) paramsA[72]; // x_a17_opacity;
    const T s193 = (T) paramsA[73]; // x_a17_hue;
    const T s194 = (T) paramsA[74]; // x_a17_light;
    const T s195 = (T) paramsA[75]; // x_a17_sat;
    const T s196 = (T) paramsB[120]; // a16_r;
    const T s197 = (T) paramsB[121]; // a16_g;
    const T s198 = (T) paramsB[122]; // a16_b;
    const T s199 = (T) paramsB[123]; // a16_a;
    const T s200 = (T) paramsA[76]; // x_a16_opacity;
    const T s201 = (T) paramsA[77]; // x_a16_hue;
    const T s202 = (T) paramsA[78]; // x_a16_light;
    const T s203 = (T) paramsA[79]; // x_a16_sat;
    const T s204 = (T) paramsB[124]; // a15_r;
    const T s205 = (T) paramsB[125]; // a15_g;
    const T s206 = (T) paramsB[126]; // a15_b;
    const T s207 = (T) paramsB[127]; // a15_a;
    const T s208 = (T) paramsA[80]; // x_a15_opacity;
    const T s209 = (T) paramsA[81]; // x_a15_hue;
    const T s210 = (T) paramsA[82]; // x_a15_light;
    const T s211 = (T) paramsA[83]; // x_a15_sat;
    const T s212 = (T) paramsB[128]; // a14_r;
    const T s213 = (T) paramsB[129]; // a14_g;
    const T s214 = (T) paramsB[130]; // a14_b;
    const T s215 = (T) paramsB[131]; // a14_a;
    const T s216 = (T) paramsA[84]; // x_a14_opacity;
    const T s217 = (T) paramsA[85]; // x_a14_hue;
    const T s218 = (T) paramsA[86]; // x_a14_light;
    const T s219 = (T) paramsA[87]; // x_a14_sat;
    const T s220 = (T) paramsB[132]; // a13_r;
    const T s221 = (T) paramsB[133]; // a13_g;
    const T s222 = (T) paramsB[134]; // a13_b;
    const T s223 = (T) paramsB[135]; // a13_a;
    const T s224 = (T) paramsA[88]; // x_a13_opacity;
    const T s225 = (T) paramsA[89]; // x_a13_hue;
    const T s226 = (T) paramsA[90]; // x_a13_light;
    const T s227 = (T) paramsA[91]; // x_a13_sat;
    const T s228 = (T) paramsB[136]; // a12_r;
    const T s229 = (T) paramsB[137]; // a12_g;
    const T s230 = (T) paramsB[138]; // a12_b;
    const T s231 = (T) paramsB[139]; // a12_a;
    const T s232 = (T) paramsA[92]; // x_a12_opacity;
    const T s233 = (T) paramsA[93]; // x_a12_hue;
    const T s234 = (T) paramsA[94]; // x_a12_light;
    const T s235 = (T) paramsA[95]; // x_a12_sat;
    const T s236 = (T) paramsB[140]; // a11_r;
    const T s237 = (T) paramsB[141]; // a11_g;
    const T s238 = (T) paramsB[142]; // a11_b;
    const T s239 = (T) paramsB[143]; // a11_a;
    const T s240 = (T) paramsA[96]; // x_a11_opacity;
    const T s241 = (T) paramsA[97]; // x_a11_hue;
    const T s242 = (T) paramsA[98]; // x_a11_light;
    const T s243 = (T) paramsA[99]; // x_a11_sat;
    const T s244 = (T) paramsB[144]; // a10_r;
    const T s245 = (T) paramsB[145]; // a10_g;
    const T s246 = (T) paramsB[146]; // a10_b;
    const T s247 = (T) paramsB[147]; // a10_a;
    const T s248 = (T) paramsA[100]; // x_a10_opacity;
    const T s249 = (T) paramsA[101]; // x_a10_hue;
    const T s250 = (T) paramsA[102]; // x_a10_light;
    const T s251 = (T) paramsA[103]; // x_a10_sat;
    const T s252 = (T) paramsB[148]; // a9_r;
    const T s253 = (T) paramsB[149]; // a9_g;
    const T s254 = (T) paramsB[150]; // a9_b;
    const T s255 = (T) paramsB[151]; // a9_a;
    const T s256 = (T) paramsA[104]; // x_a9_opacity;
    const T s257 = (T) paramsA[105]; // x_a9_hue;
    const T s258 = (T) paramsA[106]; // x_a9_light;
    const T s259 = (T) paramsA[107]; // x_a9_sat;
    const T s260 = (T) paramsB[152]; // a8_r;
    const T s261 = (T) paramsB[153]; // a8_g;
    const T s262 = (T) paramsB[154]; // a8_b;
    const T s263 = (T) paramsB[155]; // a8_a;
    const T s264 = (T) paramsA[108]; // x_a8_opacity;
    const T s265 = (T) paramsA[109]; // x_a8_hue;
    const T s266 = (T) paramsA[110]; // x_a8_light;
    const T s267 = (T) paramsA[111]; // x_a8_sat;
    const T s268 = (T) paramsB[156]; // a7_r;
    const T s269 = (T) paramsB[157]; // a7_g;
    const T s270 = (T) paramsB[158]; // a7_b;
    const T s271 = (T) paramsB[159]; // a7_a;
    const T s272 = (T) paramsA[112]; // x_a7_opacity;
    const T s273 = (T) paramsA[113]; // x_a7_hue;
    const T s274 = (T) paramsA[114]; // x_a7_light;
    const T s275 = (T) paramsA[115]; // x_a7_sat;
    const T s276 = (T) paramsB[160]; // a6_r;
    const T s277 = (T) paramsB[161]; // a6_g;
    const T s278 = (T) paramsB[162]; // a6_b;
    const T s279 = (T) paramsB[163]; // a6_a;
    const T s280 = (T) paramsA[116]; // x_a6_opacity;
    const T s281 = (T) paramsA[117]; // x_a6_hue;
    const T s282 = (T) paramsA[118]; // x_a6_light;
    const T s283 = (T) paramsA[119]; // x_a6_sat;
    const T s284 = (T) paramsB[164]; // a5_r;
    const T s285 = (T) paramsB[165]; // a5_g;
    const T s286 = (T) paramsB[166]; // a5_b;
    const T s287 = (T) paramsB[167]; // a5_a;
    const T s288 = (T) paramsA[120]; // x_a5_opacity;
    const T s289 = (T) paramsA[121]; // x_a5_hue;
    const T s290 = (T) paramsA[122]; // x_a5_light;
    const T s291 = (T) paramsA[123]; // x_a5_sat;
    const T s292 = (T) paramsB[168]; // a4_r;
    const T s293 = (T) paramsB[169]; // a4_g;
    const T s294 = (T) paramsB[170]; // a4_b;
    const T s295 = (T) paramsB[171]; // a4_a;
    const T s296 = (T) paramsA[124]; // x_a4_opacity;
    const T s297 = (T) paramsA[125]; // x_a4_hue;
    const T s298 = (T) paramsA[126]; // x_a4_light;
    const T s299 = (T) paramsA[127]; // x_a4_sat;
    const T s300 = (T) paramsB[172]; // a3_r;
    const T s301 = (T) paramsB[173]; // a3_g;
    const T s302 = (T) paramsB[174]; // a3_b;
    const T s303 = (T) paramsB[175]; // a3_a;
    const T s304 = (T) paramsA[128]; // x_a3_opacity;
    const T s305 = (T) paramsA[129]; // x_a3_hue;
    const T s306 = (T) paramsA[130]; // x_a3_light;
    const T s307 = (T) paramsA[131]; // x_a3_sat;
    const T s308 = (T) paramsB[176]; // a2_r;
    const T s309 = (T) paramsB[177]; // a2_g;
    const T s310 = (T) paramsB[178]; // a2_b;
    const T s311 = (T) paramsB[179]; // a2_a;
    const T s312 = (T) paramsA[132]; // x_a2_opacity;
    const T s313 = (T) paramsA[133]; // x_a2_hue;
    const T s314 = (T) paramsA[134]; // x_a2_light;
    const T s315 = (T) paramsA[135]; // x_a2_sat;
    const T s316 = (T) paramsB[180]; // a1_r;
    const T s317 = (T) paramsB[181]; // a1_g;
    const T s318 = (T) paramsB[182]; // a1_b;
    const T s319 = (T) paramsB[183]; // a1_a;
    const T s320 = (T) paramsA[136]; // x_a1_opacity;
    const T s321 = (T) paramsA[137]; // x_a1_hue;
    const T s322 = (T) paramsA[138]; // x_a1_light;
    const T s323 = (T) paramsA[139]; // x_a1_sat;
    const T s324 = (T) paramsB[184]; // Your Photo_r;
    const T s325 = (T) paramsB[185]; // Your Photo_g;
    const T s326 = (T) paramsB[186]; // Your Photo_b;
    const T s327 = (T) paramsB[187]; // Your Photo_a;
    const T s328 = (T) paramsA[140]; // x_Your Photo_opacity;
    const T s329 = (T) paramsB[188]; // Photo Sharpening_r;
    const T s330 = (T) paramsB[189]; // Photo Sharpening_g;
    const T s331 = (T) paramsB[190]; // Photo Sharpening_b;
    const T s332 = (T) paramsB[191]; // Photo Sharpening_a;
    const T s333 = (T) paramsA[141]; // x_Photo Sharpening_opacity;
    const T s334 = (T) paramsA[142]; // x_Add Saturation_opacity;
    const T s335 = (T) paramsA[143]; // x_Add Saturation_hue;
    const T s336 = (T) paramsA[144]; // x_Add Saturation_light;
    const T s337 = (T) paramsA[145]; // x_Add Saturation_sat;
    const T s338 = (T) paramsA[146]; // x_Color 1_opacity;
    const T s339 = (T) paramsA[147]; // x_Color 1_RGB;
    const T s340 = (T) paramsA[148]; // x_Color 1_blue;
    const T s341 = (T) paramsA[149]; // x_Color 1_green;
    const T s342 = (T) paramsA[150]; // x_Color 1_red;
    const T s343 = (T)1.000000;
    const T s344 = s3 * s343;
    const T s345 = (T)0.000000;
    const T s346 = s345 * s344;
    const T s347 = (T)0.000000;
    const T s348 = s347 + s344;
    const T s349 = s348 - s346;
    const T s350 = s0 * s344;
    const T s351 = s1 * s344;
    const T s352 = s2 * s344;
    const T s353 = (T)1.000000;
    const T s354 = s353 - s344;
    const T s355 = (T)0.000000;
    const T s356 = s355 * s354;
    const T s357 = s350 + s356;
    vector<T> v358 = { s357, s349 };
    auto s358 = cvtT(v358);
    const T s359 = s358[0];
    const T s360 = (T)1.000000;
    const T s361 = s360 - s344;
    const T s362 = (T)0.000000;
    const T s363 = s362 * s361;
    const T s364 = s351 + s363;
    vector<T> v365 = { s364, s349 };
    auto s365 = cvtT(v365);
    const T s366 = s365[0];
    const T s367 = (T)1.000000;
    const T s368 = s367 - s344;
    const T s369 = (T)0.000000;
    const T s370 = s369 * s368;
    const T s371 = s352 + s370;
    vector<T> v372 = { s371, s349 };
    auto s372 = cvtT(v372);
    const T s373 = s372[0];
    const T s374 = (T)1.000000;
    const T s375 = s8 * s374;
    const T s376 = s349 * s375;
    const T s377 = s349 + s375;
    const T s378 = s377 - s376;
    const T s379 = s5 * s375;
    const T s380 = s6 * s375;
    const T s381 = s7 * s375;
    const T s382 = s359 * s349;
    const T s383 = s366 * s349;
    const T s384 = s373 * s349;
    const T s385 = (T)1.000000;
    const T s386 = s385 - s375;
    const T s387 = s382 * s386;
    const T s388 = s379 + s387;
    vector<T> v389 = { s388, s378 };
    auto s389 = cvtT(v389);
    const T s390 = s389[0];
    const T s391 = (T)1.000000;
    const T s392 = s391 - s375;
    const T s393 = s383 * s392;
    const T s394 = s380 + s393;
    vector<T> v395 = { s394, s378 };
    auto s395 = cvtT(v395);
    const T s396 = s395[0];
    const T s397 = (T)1.000000;
    const T s398 = s397 - s375;
    const T s399 = s384 * s398;
    const T s400 = s381 + s399;
    vector<T> v401 = { s400, s378 };
    auto s401 = cvtT(v401);
    const T s402 = s401[0];
    const T s403 = (T)1.000000;
    const T s404 = s13 * s403;
    const T s405 = s378 * s404;
    const T s406 = s378 + s404;
    const T s407 = s406 - s405;
    const T s408 = s10 * s404;
    const T s409 = s11 * s404;
    const T s410 = s12 * s404;
    const T s411 = s390 * s378;
    const T s412 = s396 * s378;
    const T s413 = s402 * s378;
    const T s414 = (T)1.000000;
    const T s415 = s414 - s404;
    const T s416 = s411 * s415;
    const T s417 = s408 + s416;
    vector<T> v418 = { s417, s407 };
    auto s418 = cvtT(v418);
    const T s419 = s418[0];
    const T s420 = (T)1.000000;
    const T s421 = s420 - s404;
    const T s422 = s412 * s421;
    const T s423 = s409 + s422;
    vector<T> v424 = { s423, s407 };
    auto s424 = cvtT(v424);
    const T s425 = s424[0];
    const T s426 = (T)1.000000;
    const T s427 = s426 - s404;
    const T s428 = s413 * s427;
    const T s429 = s410 + s428;
    vector<T> v430 = { s429, s407 };
    auto s430 = cvtT(v430);
    const T s431 = s430[0];
    const T s432 = (T)1.000000;
    const T s433 = s432 - s20;
    const T s434 = s15 * s433;
    const T s435 = s23 * s20;
    const T s436 = s435 + s434;
    const T s437 = (T)0.000000;
    const T s438 = (T)1.000000;
    vector<T> v439 = { s436, s437, s438 };
    auto s439 = clamp(v439);
    const T s440 = s439[0];
    const T s441 = (T)1.000000;
    const T s442 = s441 - s20;
    const T s443 = s16 * s442;
    const T s444 = s22 * s20;
    const T s445 = s444 + s443;
    const T s446 = (T)0.000000;
    const T s447 = (T)1.000000;
    vector<T> v448 = { s445, s446, s447 };
    auto s448 = clamp(v448);
    const T s449 = s448[0];
    const T s450 = (T)1.000000;
    const T s451 = s450 - s20;
    const T s452 = s17 * s451;
    const T s453 = s21 * s20;
    const T s454 = s453 + s452;
    const T s455 = (T)0.000000;
    const T s456 = (T)1.000000;
    vector<T> v457 = { s454, s455, s456 };
    auto s457 = clamp(v457);
    const T s458 = s457[0];
    const T s459 = (T)0.302000;
    const T s460 = s18 * s459;
    const T s461 = s407 * s460;
    const T s462 = s407 + s460;
    const T s463 = s462 - s461;
    const T s464 = s440 * s460;
    const T s465 = s449 * s460;
    const T s466 = s458 * s460;
    const T s467 = s419 * s407;
    const T s468 = s425 * s407;
    const T s469 = s431 * s407;
    const T s470 = (T)1.000000;
    const T s471 = s470 - s460;
    const T s472 = s467 * s471;
    const T s473 = s464 + s472;
    vector<T> v474 = { s473, s463 };
    auto s474 = cvtT(v474);
    const T s475 = s474[0];
    const T s476 = (T)1.000000;
    const T s477 = s476 - s460;
    const T s478 = s468 * s477;
    const T s479 = s465 + s478;
    vector<T> v480 = { s479, s463 };
    auto s480 = cvtT(v480);
    const T s481 = s480[0];
    const T s482 = (T)1.000000;
    const T s483 = s482 - s460;
    const T s484 = s469 * s483;
    const T s485 = s466 + s484;
    vector<T> v486 = { s485, s463 };
    auto s486 = cvtT(v486);
    const T s487 = s486[0];
    const T s488 = (T)1.000000;
    const T s489 = s27 * s488;
    const T s490 = s463 * s489;
    const T s491 = s463 + s489;
    const T s492 = s491 - s490;
    const T s493 = s24 * s489;
    const T s494 = s25 * s489;
    const T s495 = s26 * s489;
    const T s496 = s475 * s463;
    const T s497 = s481 * s463;
    const T s498 = s487 * s463;
    const T s499 = (T)1.000000;
    const T s500 = s499 - s489;
    const T s501 = s496 * s500;
    const T s502 = s493 + s501;
    vector<T> v503 = { s502, s492 };
    auto s503 = cvtT(v503);
    const T s504 = s503[0];
    const T s505 = (T)1.000000;
    const T s506 = s505 - s489;
    const T s507 = s497 * s506;
    const T s508 = s494 + s507;
    vector<T> v509 = { s508, s492 };
    auto s509 = cvtT(v509);
    const T s510 = s509[0];
    const T s511 = (T)1.000000;
    const T s512 = s511 - s489;
    const T s513 = s498 * s512;
    const T s514 = s495 + s513;
    vector<T> v515 = { s514, s492 };
    auto s515 = cvtT(v515);
    const T s516 = s515[0];
    const T s517 = (T)1.000000;
    const T s518 = s32 * s517;
    const T s519 = s492 * s518;
    const T s520 = s492 + s518;
    const T s521 = s520 - s519;
    const T s522 = s29 * s518;
    const T s523 = s30 * s518;
    const T s524 = s31 * s518;
    const T s525 = s504 * s492;
    const T s526 = s510 * s492;
    const T s527 = s516 * s492;
    const T s528 = (T)1.000000;
    const T s529 = s528 - s518;
    const T s530 = s525 * s529;
    const T s531 = s522 + s530;
    vector<T> v532 = { s531, s521 };
    auto s532 = cvtT(v532);
    const T s533 = s532[0];
    const T s534 = (T)1.000000;
    const T s535 = s534 - s518;
    const T s536 = s526 * s535;
    const T s537 = s523 + s536;
    vector<T> v538 = { s537, s521 };
    auto s538 = cvtT(v538);
    const T s539 = s538[0];
    const T s540 = (T)1.000000;
    const T s541 = s540 - s518;
    const T s542 = s527 * s541;
    const T s543 = s524 + s542;
    vector<T> v544 = { s543, s521 };
    auto s544 = cvtT(v544);
    const T s545 = s544[0];
    const T s546 = (T)1.000000;
    const T s547 = s37 * s546;
    const T s548 = s521 * s547;
    const T s549 = s521 + s547;
    const T s550 = s549 - s548;
    const T s551 = s34 * s547;
    const T s552 = s35 * s547;
    const T s553 = s36 * s547;
    const T s554 = s533 * s521;
    const T s555 = s539 * s521;
    const T s556 = s545 * s521;
    const T s557 = (T)1.000000;
    const T s558 = s557 - s547;
    const T s559 = s554 * s558;
    const T s560 = s551 + s559;
    vector<T> v561 = { s560, s550 };
    auto s561 = cvtT(v561);
    const T s562 = s561[0];
    const T s563 = (T)1.000000;
    const T s564 = s563 - s547;
    const T s565 = s555 * s564;
    const T s566 = s552 + s565;
    vector<T> v567 = { s566, s550 };
    auto s567 = cvtT(v567);
    const T s568 = s567[0];
    const T s569 = (T)1.000000;
    const T s570 = s569 - s547;
    const T s571 = s556 * s570;
    const T s572 = s553 + s571;
    vector<T> v573 = { s572, s550 };
    auto s573 = cvtT(v573);
    const T s574 = s573[0];
    const T s575 = (T)1.000000;
    const T s576 = s42 * s575;
    const T s577 = s550 * s576;
    const T s578 = s550 + s576;
    const T s579 = s578 - s577;
    const T s580 = s39 * s576;
    const T s581 = s40 * s576;
    const T s582 = s41 * s576;
    const T s583 = s562 * s550;
    const T s584 = s568 * s550;
    const T s585 = s574 * s550;
    const T s586 = (T)1.000000;
    const T s587 = s586 - s576;
    const T s588 = s583 * s587;
    const T s589 = s580 + s588;
    vector<T> v590 = { s589, s579 };
    auto s590 = cvtT(v590);
    const T s591 = s590[0];
    const T s592 = (T)1.000000;
    const T s593 = s592 - s576;
    const T s594 = s584 * s593;
    const T s595 = s581 + s594;
    vector<T> v596 = { s595, s579 };
    auto s596 = cvtT(v596);
    const T s597 = s596[0];
    const T s598 = (T)1.000000;
    const T s599 = s598 - s576;
    const T s600 = s585 * s599;
    const T s601 = s582 + s600;
    vector<T> v602 = { s601, s579 };
    auto s602 = cvtT(v602);
    const T s603 = s602[0];
    const T s604 = (T)1.000000;
    const T s605 = s47 * s604;
    const T s606 = s579 * s605;
    const T s607 = s579 + s605;
    const T s608 = s607 - s606;
    const T s609 = s44 * s605;
    const T s610 = s45 * s605;
    const T s611 = s46 * s605;
    const T s612 = s591 * s579;
    const T s613 = s597 * s579;
    const T s614 = s603 * s579;
    const T s615 = (T)1.000000;
    const T s616 = s615 - s605;
    const T s617 = s612 * s616;
    const T s618 = s609 + s617;
    vector<T> v619 = { s618, s608 };
    auto s619 = cvtT(v619);
    const T s620 = s619[0];
    const T s621 = (T)1.000000;
    const T s622 = s621 - s605;
    const T s623 = s613 * s622;
    const T s624 = s610 + s623;
    vector<T> v625 = { s624, s608 };
    auto s625 = cvtT(v625);
    const T s626 = s625[0];
    const T s627 = (T)1.000000;
    const T s628 = s627 - s605;
    const T s629 = s614 * s628;
    const T s630 = s611 + s629;
    vector<T> v631 = { s630, s608 };
    auto s631 = cvtT(v631);
    const T s632 = s631[0];
    const T s633 = (T)1.000000;
    const T s634 = s52 * s633;
    const T s635 = s608 * s634;
    const T s636 = s608 + s634;
    const T s637 = s636 - s635;
    const T s638 = s49 * s634;
    const T s639 = s50 * s634;
    const T s640 = s51 * s634;
    const T s641 = s620 * s608;
    const T s642 = s626 * s608;
    const T s643 = s632 * s608;
    const T s644 = (T)1.000000;
    const T s645 = s644 - s634;
    const T s646 = s641 * s645;
    const T s647 = s638 + s646;
    vector<T> v648 = { s647, s637 };
    auto s648 = cvtT(v648);
    const T s649 = s648[0];
    const T s650 = (T)1.000000;
    const T s651 = s650 - s634;
    const T s652 = s642 * s651;
    const T s653 = s639 + s652;
    vector<T> v654 = { s653, s637 };
    auto s654 = cvtT(v654);
    const T s655 = s654[0];
    const T s656 = (T)1.000000;
    const T s657 = s656 - s634;
    const T s658 = s643 * s657;
    const T s659 = s640 + s658;
    vector<T> v660 = { s659, s637 };
    auto s660 = cvtT(v660);
    const T s661 = s660[0];
    const T s662 = (T)1.000000;
    const T s663 = s57 * s662;
    const T s664 = s637 * s663;
    const T s665 = s637 + s663;
    const T s666 = s665 - s664;
    const T s667 = s54 * s663;
    const T s668 = s55 * s663;
    const T s669 = s56 * s663;
    const T s670 = s649 * s637;
    const T s671 = s655 * s637;
    const T s672 = s661 * s637;
    const T s673 = (T)1.000000;
    const T s674 = s673 - s663;
    const T s675 = s670 * s674;
    const T s676 = s667 + s675;
    vector<T> v677 = { s676, s666 };
    auto s677 = cvtT(v677);
    const T s678 = s677[0];
    const T s679 = (T)1.000000;
    const T s680 = s679 - s663;
    const T s681 = s671 * s680;
    const T s682 = s668 + s681;
    vector<T> v683 = { s682, s666 };
    auto s683 = cvtT(v683);
    const T s684 = s683[0];
    const T s685 = (T)1.000000;
    const T s686 = s685 - s663;
    const T s687 = s672 * s686;
    const T s688 = s669 + s687;
    vector<T> v689 = { s688, s666 };
    auto s689 = cvtT(v689);
    const T s690 = s689[0];
    const T s691 = (T)1.000000;
    const T s692 = s62 * s691;
    const T s693 = s666 * s692;
    const T s694 = s666 + s692;
    const T s695 = s694 - s693;
    const T s696 = s59 * s692;
    const T s697 = s60 * s692;
    const T s698 = s61 * s692;
    const T s699 = s678 * s666;
    const T s700 = s684 * s666;
    const T s701 = s690 * s666;
    const T s702 = (T)1.000000;
    const T s703 = s702 - s692;
    const T s704 = s699 * s703;
    const T s705 = s696 + s704;
    vector<T> v706 = { s705, s695 };
    auto s706 = cvtT(v706);
    const T s707 = s706[0];
    const T s708 = (T)1.000000;
    const T s709 = s708 - s692;
    const T s710 = s700 * s709;
    const T s711 = s697 + s710;
    vector<T> v712 = { s711, s695 };
    auto s712 = cvtT(v712);
    const T s713 = s712[0];
    const T s714 = (T)1.000000;
    const T s715 = s714 - s692;
    const T s716 = s701 * s715;
    const T s717 = s698 + s716;
    vector<T> v718 = { s717, s695 };
    auto s718 = cvtT(v718);
    const T s719 = s718[0];
    const T s720 = (T)1.000000;
    const T s721 = s67 * s720;
    const T s722 = s695 * s721;
    const T s723 = s695 + s721;
    const T s724 = s723 - s722;
    const T s725 = s64 * s721;
    const T s726 = s65 * s721;
    const T s727 = s66 * s721;
    const T s728 = s707 * s695;
    const T s729 = s713 * s695;
    const T s730 = s719 * s695;
    const T s731 = (T)1.000000;
    const T s732 = s731 - s721;
    const T s733 = s728 * s732;
    const T s734 = s725 + s733;
    vector<T> v735 = { s734, s724 };
    auto s735 = cvtT(v735);
    const T s736 = s735[0];
    const T s737 = (T)1.000000;
    const T s738 = s737 - s721;
    const T s739 = s729 * s738;
    const T s740 = s726 + s739;
    vector<T> v741 = { s740, s724 };
    auto s741 = cvtT(v741);
    const T s742 = s741[0];
    const T s743 = (T)1.000000;
    const T s744 = s743 - s721;
    const T s745 = s730 * s744;
    const T s746 = s727 + s745;
    vector<T> v747 = { s746, s724 };
    auto s747 = cvtT(v747);
    const T s748 = s747[0];
    const T s749 = (T)1.000000;
    const T s750 = s72 * s749;
    const T s751 = s724 * s750;
    const T s752 = s724 + s750;
    const T s753 = s752 - s751;
    const T s754 = s69 * s750;
    const T s755 = s70 * s750;
    const T s756 = s71 * s750;
    const T s757 = s736 * s724;
    const T s758 = s742 * s724;
    const T s759 = s748 * s724;
    const T s760 = (T)1.000000;
    const T s761 = s760 - s750;
    const T s762 = s757 * s761;
    const T s763 = s754 + s762;
    vector<T> v764 = { s763, s753 };
    auto s764 = cvtT(v764);
    const T s765 = s764[0];
    const T s766 = (T)1.000000;
    const T s767 = s766 - s750;
    const T s768 = s758 * s767;
    const T s769 = s755 + s768;
    vector<T> v770 = { s769, s753 };
    auto s770 = cvtT(v770);
    const T s771 = s770[0];
    const T s772 = (T)1.000000;
    const T s773 = s772 - s750;
    const T s774 = s759 * s773;
    const T s775 = s756 + s774;
    vector<T> v776 = { s775, s753 };
    auto s776 = cvtT(v776);
    const T s777 = s776[0];
    const T s778 = (T)1.000000;
    const T s779 = s77 * s778;
    const T s780 = s753 * s779;
    const T s781 = s753 + s779;
    const T s782 = s781 - s780;
    const T s783 = s74 * s779;
    const T s784 = s75 * s779;
    const T s785 = s76 * s779;
    const T s786 = s765 * s753;
    const T s787 = s771 * s753;
    const T s788 = s777 * s753;
    const T s789 = (T)1.000000;
    const T s790 = s789 - s779;
    const T s791 = s786 * s790;
    const T s792 = s783 + s791;
    vector<T> v793 = { s792, s782 };
    auto s793 = cvtT(v793);
    const T s794 = s793[0];
    const T s795 = (T)1.000000;
    const T s796 = s795 - s779;
    const T s797 = s787 * s796;
    const T s798 = s784 + s797;
    vector<T> v799 = { s798, s782 };
    auto s799 = cvtT(v799);
    const T s800 = s799[0];
    const T s801 = (T)1.000000;
    const T s802 = s801 - s779;
    const T s803 = s788 * s802;
    const T s804 = s785 + s803;
    vector<T> v805 = { s804, s782 };
    auto s805 = cvtT(v805);
    const T s806 = s805[0];
    const T s807 = (T)1.000000;
    const T s808 = s82 * s807;
    const T s809 = s782 * s808;
    const T s810 = s782 + s808;
    const T s811 = s810 - s809;
    const T s812 = s79 * s808;
    const T s813 = s80 * s808;
    const T s814 = s81 * s808;
    const T s815 = s794 * s782;
    const T s816 = s800 * s782;
    const T s817 = s806 * s782;
    const T s818 = (T)1.000000;
    const T s819 = s818 - s808;
    const T s820 = s815 * s819;
    const T s821 = s812 + s820;
    vector<T> v822 = { s821, s811 };
    auto s822 = cvtT(v822);
    const T s823 = s822[0];
    const T s824 = (T)1.000000;
    const T s825 = s824 - s808;
    const T s826 = s816 * s825;
    const T s827 = s813 + s826;
    vector<T> v828 = { s827, s811 };
    auto s828 = cvtT(v828);
    const T s829 = s828[0];
    const T s830 = (T)1.000000;
    const T s831 = s830 - s808;
    const T s832 = s817 * s831;
    const T s833 = s814 + s832;
    vector<T> v834 = { s833, s811 };
    auto s834 = cvtT(v834);
    const T s835 = s834[0];
    vector<T> v836 = { s84, s85, s86 };
    auto s836 = RGBToHSL(v836);
    const T s837 = s836[0];
    const T s838 = s836[1];
    const T s839 = s836[2];
    const T s840 = (T)0.500000;
    const T s841 = s89 - s840;
    const T s842 = (T)360.000000;
    const T s843 = s841 * s842;
    const T s844 = s837 + s843;
    const T s845 = (T)0.500000;
    const T s846 = s91 - s845;
    const T s847 = (T)2.000000;
    const T s848 = s846 * s847;
    const T s849 = s838 + s848;
    const T s850 = (T)0.500000;
    const T s851 = s90 - s850;
    const T s852 = (T)2.000000;
    const T s853 = s851 * s852;
    const T s854 = s839 + s853;
    vector<T> v855 = { s844, s849, s854 };
    auto s855 = HSLToRGB(v855);
    const T s856 = s855[0];
    const T s857 = s855[1];
    const T s858 = s855[2];
    const T s859 = (T)0.000000;
    const T s860 = (T)1.000000;
    vector<T> v861 = { s856, s859, s860 };
    auto s861 = clamp(v861);
    const T s862 = s861[0];
    const T s863 = (T)0.000000;
    const T s864 = (T)1.000000;
    vector<T> v865 = { s857, s863, s864 };
    auto s865 = clamp(v865);
    const T s866 = s865[0];
    const T s867 = (T)0.000000;
    const T s868 = (T)1.000000;
    vector<T> v869 = { s858, s867, s868 };
    auto s869 = clamp(v869);
    const T s870 = s869[0];
    const T s871 = (T)1.000000;
    const T s872 = s87 * s871;
    const T s873 = s811 * s872;
    const T s874 = s811 + s872;
    const T s875 = s874 - s873;
    const T s876 = s862 * s872;
    const T s877 = s866 * s872;
    const T s878 = s870 * s872;
    const T s879 = s823 * s811;
    const T s880 = s829 * s811;
    const T s881 = s835 * s811;
    vector<T> v882 = { s811, s872 };
    auto s882 = linearDodgeAlpha(v882);
    const T s883 = s882[0];
    const T s884 = s876 + s879;
    vector<T> v885 = { s884, s883 };
    auto s885 = cvtT(v885);
    const T s886 = s885[0];
    const T s887 = s877 + s880;
    vector<T> v888 = { s887, s883 };
    auto s888 = cvtT(v888);
    const T s889 = s888[0];
    const T s890 = s878 + s881;
    vector<T> v891 = { s890, s883 };
    auto s891 = cvtT(v891);
    const T s892 = s891[0];
    vector<T> v893 = { s92, s93, s94 };
    auto s893 = RGBToHSL(v893);
    const T s894 = s893[0];
    const T s895 = s893[1];
    const T s896 = s893[2];
    const T s897 = (T)0.500000;
    const T s898 = s97 - s897;
    const T s899 = (T)360.000000;
    const T s900 = s898 * s899;
    const T s901 = s894 + s900;
    const T s902 = (T)0.500000;
    const T s903 = s99 - s902;
    const T s904 = (T)2.000000;
    const T s905 = s903 * s904;
    const T s906 = s895 + s905;
    const T s907 = (T)0.500000;
    const T s908 = s98 - s907;
    const T s909 = (T)2.000000;
    const T s910 = s908 * s909;
    const T s911 = s896 + s910;
    vector<T> v912 = { s901, s906, s911 };
    auto s912 = HSLToRGB(v912);
    const T s913 = s912[0];
    const T s914 = s912[1];
    const T s915 = s912[2];
    const T s916 = (T)0.000000;
    const T s917 = (T)1.000000;
    vector<T> v918 = { s913, s916, s917 };
    auto s918 = clamp(v918);
    const T s919 = s918[0];
    const T s920 = (T)0.000000;
    const T s921 = (T)1.000000;
    vector<T> v922 = { s914, s920, s921 };
    auto s922 = clamp(v922);
    const T s923 = s922[0];
    const T s924 = (T)0.000000;
    const T s925 = (T)1.000000;
    vector<T> v926 = { s915, s924, s925 };
    auto s926 = clamp(v926);
    const T s927 = s926[0];
    const T s928 = (T)1.000000;
    const T s929 = s95 * s928;
    const T s930 = s883 * s929;
    const T s931 = s883 + s929;
    const T s932 = s931 - s930;
    const T s933 = s919 * s929;
    const T s934 = s923 * s929;
    const T s935 = s927 * s929;
    const T s936 = s886 * s883;
    const T s937 = s889 * s883;
    const T s938 = s892 * s883;
    vector<T> v939 = { s883, s929 };
    auto s939 = linearDodgeAlpha(v939);
    const T s940 = s939[0];
    const T s941 = s933 + s936;
    vector<T> v942 = { s941, s940 };
    auto s942 = cvtT(v942);
    const T s943 = s942[0];
    const T s944 = s934 + s937;
    vector<T> v945 = { s944, s940 };
    auto s945 = cvtT(v945);
    const T s946 = s945[0];
    const T s947 = s935 + s938;
    vector<T> v948 = { s947, s940 };
    auto s948 = cvtT(v948);
    const T s949 = s948[0];
    vector<T> v950 = { s100, s101, s102 };
    auto s950 = RGBToHSL(v950);
    const T s951 = s950[0];
    const T s952 = s950[1];
    const T s953 = s950[2];
    const T s954 = (T)0.500000;
    const T s955 = s105 - s954;
    const T s956 = (T)360.000000;
    const T s957 = s955 * s956;
    const T s958 = s951 + s957;
    const T s959 = (T)0.500000;
    const T s960 = s107 - s959;
    const T s961 = (T)2.000000;
    const T s962 = s960 * s961;
    const T s963 = s952 + s962;
    const T s964 = (T)0.500000;
    const T s965 = s106 - s964;
    const T s966 = (T)2.000000;
    const T s967 = s965 * s966;
    const T s968 = s953 + s967;
    vector<T> v969 = { s958, s963, s968 };
    auto s969 = HSLToRGB(v969);
    const T s970 = s969[0];
    const T s971 = s969[1];
    const T s972 = s969[2];
    const T s973 = (T)0.000000;
    const T s974 = (T)1.000000;
    vector<T> v975 = { s970, s973, s974 };
    auto s975 = clamp(v975);
    const T s976 = s975[0];
    const T s977 = (T)0.000000;
    const T s978 = (T)1.000000;
    vector<T> v979 = { s971, s977, s978 };
    auto s979 = clamp(v979);
    const T s980 = s979[0];
    const T s981 = (T)0.000000;
    const T s982 = (T)1.000000;
    vector<T> v983 = { s972, s981, s982 };
    auto s983 = clamp(v983);
    const T s984 = s983[0];
    const T s985 = (T)1.000000;
    const T s986 = s103 * s985;
    const T s987 = s940 * s986;
    const T s988 = s940 + s986;
    const T s989 = s988 - s987;
    const T s990 = s976 * s986;
    const T s991 = s980 * s986;
    const T s992 = s984 * s986;
    const T s993 = s943 * s940;
    const T s994 = s946 * s940;
    const T s995 = s949 * s940;
    vector<T> v996 = { s940, s986 };
    auto s996 = linearDodgeAlpha(v996);
    const T s997 = s996[0];
    const T s998 = s990 + s993;
    vector<T> v999 = { s998, s997 };
    auto s999 = cvtT(v999);
    const T s1000 = s999[0];
    const T s1001 = s991 + s994;
    vector<T> v1002 = { s1001, s997 };
    auto s1002 = cvtT(v1002);
    const T s1003 = s1002[0];
    const T s1004 = s992 + s995;
    vector<T> v1005 = { s1004, s997 };
    auto s1005 = cvtT(v1005);
    const T s1006 = s1005[0];
    vector<T> v1007 = { s108, s109, s110 };
    auto s1007 = RGBToHSL(v1007);
    const T s1008 = s1007[0];
    const T s1009 = s1007[1];
    const T s1010 = s1007[2];
    const T s1011 = (T)0.500000;
    const T s1012 = s113 - s1011;
    const T s1013 = (T)360.000000;
    const T s1014 = s1012 * s1013;
    const T s1015 = s1008 + s1014;
    const T s1016 = (T)0.500000;
    const T s1017 = s115 - s1016;
    const T s1018 = (T)2.000000;
    const T s1019 = s1017 * s1018;
    const T s1020 = s1009 + s1019;
    const T s1021 = (T)0.500000;
    const T s1022 = s114 - s1021;
    const T s1023 = (T)2.000000;
    const T s1024 = s1022 * s1023;
    const T s1025 = s1010 + s1024;
    vector<T> v1026 = { s1015, s1020, s1025 };
    auto s1026 = HSLToRGB(v1026);
    const T s1027 = s1026[0];
    const T s1028 = s1026[1];
    const T s1029 = s1026[2];
    const T s1030 = (T)0.000000;
    const T s1031 = (T)1.000000;
    vector<T> v1032 = { s1027, s1030, s1031 };
    auto s1032 = clamp(v1032);
    const T s1033 = s1032[0];
    const T s1034 = (T)0.000000;
    const T s1035 = (T)1.000000;
    vector<T> v1036 = { s1028, s1034, s1035 };
    auto s1036 = clamp(v1036);
    const T s1037 = s1036[0];
    const T s1038 = (T)0.000000;
    const T s1039 = (T)1.000000;
    vector<T> v1040 = { s1029, s1038, s1039 };
    auto s1040 = clamp(v1040);
    const T s1041 = s1040[0];
    const T s1042 = (T)1.000000;
    const T s1043 = s111 * s1042;
    const T s1044 = s997 * s1043;
    const T s1045 = s997 + s1043;
    const T s1046 = s1045 - s1044;
    const T s1047 = s1033 * s1043;
    const T s1048 = s1037 * s1043;
    const T s1049 = s1041 * s1043;
    const T s1050 = s1000 * s997;
    const T s1051 = s1003 * s997;
    const T s1052 = s1006 * s997;
    const T s1053 = (T)1.000000;
    const T s1054 = s1053 - s1043;
    const T s1055 = s1050 * s1054;
    const T s1056 = s1047 + s1055;
    vector<T> v1057 = { s1056, s1046 };
    auto s1057 = cvtT(v1057);
    const T s1058 = s1057[0];
    const T s1059 = (T)1.000000;
    const T s1060 = s1059 - s1043;
    const T s1061 = s1051 * s1060;
    const T s1062 = s1048 + s1061;
    vector<T> v1063 = { s1062, s1046 };
    auto s1063 = cvtT(v1063);
    const T s1064 = s1063[0];
    const T s1065 = (T)1.000000;
    const T s1066 = s1065 - s1043;
    const T s1067 = s1052 * s1066;
    const T s1068 = s1049 + s1067;
    vector<T> v1069 = { s1068, s1046 };
    auto s1069 = cvtT(v1069);
    const T s1070 = s1069[0];
    vector<T> v1071 = { s116, s117, s118 };
    auto s1071 = RGBToHSL(v1071);
    const T s1072 = s1071[0];
    const T s1073 = s1071[1];
    const T s1074 = s1071[2];
    const T s1075 = (T)0.500000;
    const T s1076 = s121 - s1075;
    const T s1077 = (T)360.000000;
    const T s1078 = s1076 * s1077;
    const T s1079 = s1072 + s1078;
    const T s1080 = (T)0.500000;
    const T s1081 = s123 - s1080;
    const T s1082 = (T)2.000000;
    const T s1083 = s1081 * s1082;
    const T s1084 = s1073 + s1083;
    const T s1085 = (T)0.500000;
    const T s1086 = s122 - s1085;
    const T s1087 = (T)2.000000;
    const T s1088 = s1086 * s1087;
    const T s1089 = s1074 + s1088;
    vector<T> v1090 = { s1079, s1084, s1089 };
    auto s1090 = HSLToRGB(v1090);
    const T s1091 = s1090[0];
    const T s1092 = s1090[1];
    const T s1093 = s1090[2];
    const T s1094 = (T)0.000000;
    const T s1095 = (T)1.000000;
    vector<T> v1096 = { s1091, s1094, s1095 };
    auto s1096 = clamp(v1096);
    const T s1097 = s1096[0];
    const T s1098 = (T)0.000000;
    const T s1099 = (T)1.000000;
    vector<T> v1100 = { s1092, s1098, s1099 };
    auto s1100 = clamp(v1100);
    const T s1101 = s1100[0];
    const T s1102 = (T)0.000000;
    const T s1103 = (T)1.000000;
    vector<T> v1104 = { s1093, s1102, s1103 };
    auto s1104 = clamp(v1104);
    const T s1105 = s1104[0];
    const T s1106 = (T)1.000000;
    const T s1107 = s119 * s1106;
    const T s1108 = s1046 * s1107;
    const T s1109 = s1046 + s1107;
    const T s1110 = s1109 - s1108;
    const T s1111 = s1097 * s1107;
    const T s1112 = s1101 * s1107;
    const T s1113 = s1105 * s1107;
    const T s1114 = s1058 * s1046;
    const T s1115 = s1064 * s1046;
    const T s1116 = s1070 * s1046;
    const T s1117 = (T)1.000000;
    const T s1118 = s1117 - s1107;
    const T s1119 = s1114 * s1118;
    const T s1120 = s1111 + s1119;
    vector<T> v1121 = { s1120, s1110 };
    auto s1121 = cvtT(v1121);
    const T s1122 = s1121[0];
    const T s1123 = (T)1.000000;
    const T s1124 = s1123 - s1107;
    const T s1125 = s1115 * s1124;
    const T s1126 = s1112 + s1125;
    vector<T> v1127 = { s1126, s1110 };
    auto s1127 = cvtT(v1127);
    const T s1128 = s1127[0];
    const T s1129 = (T)1.000000;
    const T s1130 = s1129 - s1107;
    const T s1131 = s1116 * s1130;
    const T s1132 = s1113 + s1131;
    vector<T> v1133 = { s1132, s1110 };
    auto s1133 = cvtT(v1133);
    const T s1134 = s1133[0];
    vector<T> v1135 = { s124, s125, s126 };
    auto s1135 = RGBToHSL(v1135);
    const T s1136 = s1135[0];
    const T s1137 = s1135[1];
    const T s1138 = s1135[2];
    const T s1139 = (T)0.500000;
    const T s1140 = s129 - s1139;
    const T s1141 = (T)360.000000;
    const T s1142 = s1140 * s1141;
    const T s1143 = s1136 + s1142;
    const T s1144 = (T)0.500000;
    const T s1145 = s131 - s1144;
    const T s1146 = (T)2.000000;
    const T s1147 = s1145 * s1146;
    const T s1148 = s1137 + s1147;
    const T s1149 = (T)0.500000;
    const T s1150 = s130 - s1149;
    const T s1151 = (T)2.000000;
    const T s1152 = s1150 * s1151;
    const T s1153 = s1138 + s1152;
    vector<T> v1154 = { s1143, s1148, s1153 };
    auto s1154 = HSLToRGB(v1154);
    const T s1155 = s1154[0];
    const T s1156 = s1154[1];
    const T s1157 = s1154[2];
    const T s1158 = (T)0.000000;
    const T s1159 = (T)1.000000;
    vector<T> v1160 = { s1155, s1158, s1159 };
    auto s1160 = clamp(v1160);
    const T s1161 = s1160[0];
    const T s1162 = (T)0.000000;
    const T s1163 = (T)1.000000;
    vector<T> v1164 = { s1156, s1162, s1163 };
    auto s1164 = clamp(v1164);
    const T s1165 = s1164[0];
    const T s1166 = (T)0.000000;
    const T s1167 = (T)1.000000;
    vector<T> v1168 = { s1157, s1166, s1167 };
    auto s1168 = clamp(v1168);
    const T s1169 = s1168[0];
    const T s1170 = (T)1.000000;
    const T s1171 = s127 * s1170;
    const T s1172 = s1110 * s1171;
    const T s1173 = s1110 + s1171;
    const T s1174 = s1173 - s1172;
    const T s1175 = s1161 * s1171;
    const T s1176 = s1165 * s1171;
    const T s1177 = s1169 * s1171;
    const T s1178 = s1122 * s1110;
    const T s1179 = s1128 * s1110;
    const T s1180 = s1134 * s1110;
    const T s1181 = (T)1.000000;
    const T s1182 = s1181 - s1171;
    const T s1183 = s1178 * s1182;
    const T s1184 = s1175 + s1183;
    vector<T> v1185 = { s1184, s1174 };
    auto s1185 = cvtT(v1185);
    const T s1186 = s1185[0];
    const T s1187 = (T)1.000000;
    const T s1188 = s1187 - s1171;
    const T s1189 = s1179 * s1188;
    const T s1190 = s1176 + s1189;
    vector<T> v1191 = { s1190, s1174 };
    auto s1191 = cvtT(v1191);
    const T s1192 = s1191[0];
    const T s1193 = (T)1.000000;
    const T s1194 = s1193 - s1171;
    const T s1195 = s1180 * s1194;
    const T s1196 = s1177 + s1195;
    vector<T> v1197 = { s1196, s1174 };
    auto s1197 = cvtT(v1197);
    const T s1198 = s1197[0];
    vector<T> v1199 = { s132, s133, s134 };
    auto s1199 = RGBToHSL(v1199);
    const T s1200 = s1199[0];
    const T s1201 = s1199[1];
    const T s1202 = s1199[2];
    const T s1203 = (T)0.500000;
    const T s1204 = s137 - s1203;
    const T s1205 = (T)360.000000;
    const T s1206 = s1204 * s1205;
    const T s1207 = s1200 + s1206;
    const T s1208 = (T)0.500000;
    const T s1209 = s139 - s1208;
    const T s1210 = (T)2.000000;
    const T s1211 = s1209 * s1210;
    const T s1212 = s1201 + s1211;
    const T s1213 = (T)0.500000;
    const T s1214 = s138 - s1213;
    const T s1215 = (T)2.000000;
    const T s1216 = s1214 * s1215;
    const T s1217 = s1202 + s1216;
    vector<T> v1218 = { s1207, s1212, s1217 };
    auto s1218 = HSLToRGB(v1218);
    const T s1219 = s1218[0];
    const T s1220 = s1218[1];
    const T s1221 = s1218[2];
    const T s1222 = (T)0.000000;
    const T s1223 = (T)1.000000;
    vector<T> v1224 = { s1219, s1222, s1223 };
    auto s1224 = clamp(v1224);
    const T s1225 = s1224[0];
    const T s1226 = (T)0.000000;
    const T s1227 = (T)1.000000;
    vector<T> v1228 = { s1220, s1226, s1227 };
    auto s1228 = clamp(v1228);
    const T s1229 = s1228[0];
    const T s1230 = (T)0.000000;
    const T s1231 = (T)1.000000;
    vector<T> v1232 = { s1221, s1230, s1231 };
    auto s1232 = clamp(v1232);
    const T s1233 = s1232[0];
    const T s1234 = (T)1.000000;
    const T s1235 = s135 * s1234;
    const T s1236 = s1174 * s1235;
    const T s1237 = s1174 + s1235;
    const T s1238 = s1237 - s1236;
    const T s1239 = s1225 * s1235;
    const T s1240 = s1229 * s1235;
    const T s1241 = s1233 * s1235;
    const T s1242 = s1186 * s1174;
    const T s1243 = s1192 * s1174;
    const T s1244 = s1198 * s1174;
    vector<T> v1245 = { s1174, s1235 };
    auto s1245 = linearDodgeAlpha(v1245);
    const T s1246 = s1245[0];
    const T s1247 = s1239 + s1242;
    vector<T> v1248 = { s1247, s1246 };
    auto s1248 = cvtT(v1248);
    const T s1249 = s1248[0];
    const T s1250 = s1240 + s1243;
    vector<T> v1251 = { s1250, s1246 };
    auto s1251 = cvtT(v1251);
    const T s1252 = s1251[0];
    const T s1253 = s1241 + s1244;
    vector<T> v1254 = { s1253, s1246 };
    auto s1254 = cvtT(v1254);
    const T s1255 = s1254[0];
    vector<T> v1256 = { s140, s141, s142 };
    auto s1256 = RGBToHSL(v1256);
    const T s1257 = s1256[0];
    const T s1258 = s1256[1];
    const T s1259 = s1256[2];
    const T s1260 = (T)0.500000;
    const T s1261 = s145 - s1260;
    const T s1262 = (T)360.000000;
    const T s1263 = s1261 * s1262;
    const T s1264 = s1257 + s1263;
    const T s1265 = (T)0.500000;
    const T s1266 = s147 - s1265;
    const T s1267 = (T)2.000000;
    const T s1268 = s1266 * s1267;
    const T s1269 = s1258 + s1268;
    const T s1270 = (T)0.500000;
    const T s1271 = s146 - s1270;
    const T s1272 = (T)2.000000;
    const T s1273 = s1271 * s1272;
    const T s1274 = s1259 + s1273;
    vector<T> v1275 = { s1264, s1269, s1274 };
    auto s1275 = HSLToRGB(v1275);
    const T s1276 = s1275[0];
    const T s1277 = s1275[1];
    const T s1278 = s1275[2];
    const T s1279 = (T)0.000000;
    const T s1280 = (T)1.000000;
    vector<T> v1281 = { s1276, s1279, s1280 };
    auto s1281 = clamp(v1281);
    const T s1282 = s1281[0];
    const T s1283 = (T)0.000000;
    const T s1284 = (T)1.000000;
    vector<T> v1285 = { s1277, s1283, s1284 };
    auto s1285 = clamp(v1285);
    const T s1286 = s1285[0];
    const T s1287 = (T)0.000000;
    const T s1288 = (T)1.000000;
    vector<T> v1289 = { s1278, s1287, s1288 };
    auto s1289 = clamp(v1289);
    const T s1290 = s1289[0];
    const T s1291 = (T)1.000000;
    const T s1292 = s143 * s1291;
    const T s1293 = s1246 * s1292;
    const T s1294 = s1246 + s1292;
    const T s1295 = s1294 - s1293;
    const T s1296 = s1282 * s1292;
    const T s1297 = s1286 * s1292;
    const T s1298 = s1290 * s1292;
    const T s1299 = s1249 * s1246;
    const T s1300 = s1252 * s1246;
    const T s1301 = s1255 * s1246;
    vector<T> v1302 = { s1246, s1292 };
    auto s1302 = linearDodgeAlpha(v1302);
    const T s1303 = s1302[0];
    const T s1304 = s1296 + s1299;
    vector<T> v1305 = { s1304, s1303 };
    auto s1305 = cvtT(v1305);
    const T s1306 = s1305[0];
    const T s1307 = s1297 + s1300;
    vector<T> v1308 = { s1307, s1303 };
    auto s1308 = cvtT(v1308);
    const T s1309 = s1308[0];
    const T s1310 = s1298 + s1301;
    vector<T> v1311 = { s1310, s1303 };
    auto s1311 = cvtT(v1311);
    const T s1312 = s1311[0];
    vector<T> v1313 = { s148, s149, s150 };
    auto s1313 = RGBToHSL(v1313);
    const T s1314 = s1313[0];
    const T s1315 = s1313[1];
    const T s1316 = s1313[2];
    const T s1317 = (T)0.500000;
    const T s1318 = s153 - s1317;
    const T s1319 = (T)360.000000;
    const T s1320 = s1318 * s1319;
    const T s1321 = s1314 + s1320;
    const T s1322 = (T)0.500000;
    const T s1323 = s155 - s1322;
    const T s1324 = (T)2.000000;
    const T s1325 = s1323 * s1324;
    const T s1326 = s1315 + s1325;
    const T s1327 = (T)0.500000;
    const T s1328 = s154 - s1327;
    const T s1329 = (T)2.000000;
    const T s1330 = s1328 * s1329;
    const T s1331 = s1316 + s1330;
    vector<T> v1332 = { s1321, s1326, s1331 };
    auto s1332 = HSLToRGB(v1332);
    const T s1333 = s1332[0];
    const T s1334 = s1332[1];
    const T s1335 = s1332[2];
    const T s1336 = (T)0.000000;
    const T s1337 = (T)1.000000;
    vector<T> v1338 = { s1333, s1336, s1337 };
    auto s1338 = clamp(v1338);
    const T s1339 = s1338[0];
    const T s1340 = (T)0.000000;
    const T s1341 = (T)1.000000;
    vector<T> v1342 = { s1334, s1340, s1341 };
    auto s1342 = clamp(v1342);
    const T s1343 = s1342[0];
    const T s1344 = (T)0.000000;
    const T s1345 = (T)1.000000;
    vector<T> v1346 = { s1335, s1344, s1345 };
    auto s1346 = clamp(v1346);
    const T s1347 = s1346[0];
    const T s1348 = (T)1.000000;
    const T s1349 = s151 * s1348;
    const T s1350 = s1303 * s1349;
    const T s1351 = s1303 + s1349;
    const T s1352 = s1351 - s1350;
    const T s1353 = s1339 * s1349;
    const T s1354 = s1343 * s1349;
    const T s1355 = s1347 * s1349;
    const T s1356 = s1306 * s1303;
    const T s1357 = s1309 * s1303;
    const T s1358 = s1312 * s1303;
    vector<T> v1359 = { s1303, s1349 };
    auto s1359 = linearDodgeAlpha(v1359);
    const T s1360 = s1359[0];
    const T s1361 = s1353 + s1356;
    vector<T> v1362 = { s1361, s1360 };
    auto s1362 = cvtT(v1362);
    const T s1363 = s1362[0];
    const T s1364 = s1354 + s1357;
    vector<T> v1365 = { s1364, s1360 };
    auto s1365 = cvtT(v1365);
    const T s1366 = s1365[0];
    const T s1367 = s1355 + s1358;
    vector<T> v1368 = { s1367, s1360 };
    auto s1368 = cvtT(v1368);
    const T s1369 = s1368[0];
    vector<T> v1370 = { s156, s157, s158 };
    auto s1370 = RGBToHSL(v1370);
    const T s1371 = s1370[0];
    const T s1372 = s1370[1];
    const T s1373 = s1370[2];
    const T s1374 = (T)0.500000;
    const T s1375 = s161 - s1374;
    const T s1376 = (T)360.000000;
    const T s1377 = s1375 * s1376;
    const T s1378 = s1371 + s1377;
    const T s1379 = (T)0.500000;
    const T s1380 = s163 - s1379;
    const T s1381 = (T)2.000000;
    const T s1382 = s1380 * s1381;
    const T s1383 = s1372 + s1382;
    const T s1384 = (T)0.500000;
    const T s1385 = s162 - s1384;
    const T s1386 = (T)2.000000;
    const T s1387 = s1385 * s1386;
    const T s1388 = s1373 + s1387;
    vector<T> v1389 = { s1378, s1383, s1388 };
    auto s1389 = HSLToRGB(v1389);
    const T s1390 = s1389[0];
    const T s1391 = s1389[1];
    const T s1392 = s1389[2];
    const T s1393 = (T)0.000000;
    const T s1394 = (T)1.000000;
    vector<T> v1395 = { s1390, s1393, s1394 };
    auto s1395 = clamp(v1395);
    const T s1396 = s1395[0];
    const T s1397 = (T)0.000000;
    const T s1398 = (T)1.000000;
    vector<T> v1399 = { s1391, s1397, s1398 };
    auto s1399 = clamp(v1399);
    const T s1400 = s1399[0];
    const T s1401 = (T)0.000000;
    const T s1402 = (T)1.000000;
    vector<T> v1403 = { s1392, s1401, s1402 };
    auto s1403 = clamp(v1403);
    const T s1404 = s1403[0];
    const T s1405 = (T)1.000000;
    const T s1406 = s159 * s1405;
    const T s1407 = s1360 * s1406;
    const T s1408 = s1360 + s1406;
    const T s1409 = s1408 - s1407;
    const T s1410 = s1396 * s1406;
    const T s1411 = s1400 * s1406;
    const T s1412 = s1404 * s1406;
    const T s1413 = s1363 * s1360;
    const T s1414 = s1366 * s1360;
    const T s1415 = s1369 * s1360;
    vector<T> v1416 = { s1360, s1406 };
    auto s1416 = linearDodgeAlpha(v1416);
    const T s1417 = s1416[0];
    const T s1418 = s1410 + s1413;
    vector<T> v1419 = { s1418, s1417 };
    auto s1419 = cvtT(v1419);
    const T s1420 = s1419[0];
    const T s1421 = s1411 + s1414;
    vector<T> v1422 = { s1421, s1417 };
    auto s1422 = cvtT(v1422);
    const T s1423 = s1422[0];
    const T s1424 = s1412 + s1415;
    vector<T> v1425 = { s1424, s1417 };
    auto s1425 = cvtT(v1425);
    const T s1426 = s1425[0];
    vector<T> v1427 = { s164, s165, s166 };
    auto s1427 = RGBToHSL(v1427);
    const T s1428 = s1427[0];
    const T s1429 = s1427[1];
    const T s1430 = s1427[2];
    const T s1431 = (T)0.500000;
    const T s1432 = s169 - s1431;
    const T s1433 = (T)360.000000;
    const T s1434 = s1432 * s1433;
    const T s1435 = s1428 + s1434;
    const T s1436 = (T)0.500000;
    const T s1437 = s171 - s1436;
    const T s1438 = (T)2.000000;
    const T s1439 = s1437 * s1438;
    const T s1440 = s1429 + s1439;
    const T s1441 = (T)0.500000;
    const T s1442 = s170 - s1441;
    const T s1443 = (T)2.000000;
    const T s1444 = s1442 * s1443;
    const T s1445 = s1430 + s1444;
    vector<T> v1446 = { s1435, s1440, s1445 };
    auto s1446 = HSLToRGB(v1446);
    const T s1447 = s1446[0];
    const T s1448 = s1446[1];
    const T s1449 = s1446[2];
    const T s1450 = (T)0.000000;
    const T s1451 = (T)1.000000;
    vector<T> v1452 = { s1447, s1450, s1451 };
    auto s1452 = clamp(v1452);
    const T s1453 = s1452[0];
    const T s1454 = (T)0.000000;
    const T s1455 = (T)1.000000;
    vector<T> v1456 = { s1448, s1454, s1455 };
    auto s1456 = clamp(v1456);
    const T s1457 = s1456[0];
    const T s1458 = (T)0.000000;
    const T s1459 = (T)1.000000;
    vector<T> v1460 = { s1449, s1458, s1459 };
    auto s1460 = clamp(v1460);
    const T s1461 = s1460[0];
    const T s1462 = (T)1.000000;
    const T s1463 = s167 * s1462;
    const T s1464 = s1417 * s1463;
    const T s1465 = s1417 + s1463;
    const T s1466 = s1465 - s1464;
    const T s1467 = s1453 * s1463;
    const T s1468 = s1457 * s1463;
    const T s1469 = s1461 * s1463;
    const T s1470 = s1420 * s1417;
    const T s1471 = s1423 * s1417;
    const T s1472 = s1426 * s1417;
    const T s1473 = (T)1.000000;
    const T s1474 = s1473 - s1463;
    const T s1475 = s1470 * s1474;
    const T s1476 = s1467 + s1475;
    vector<T> v1477 = { s1476, s1466 };
    auto s1477 = cvtT(v1477);
    const T s1478 = s1477[0];
    const T s1479 = (T)1.000000;
    const T s1480 = s1479 - s1463;
    const T s1481 = s1471 * s1480;
    const T s1482 = s1468 + s1481;
    vector<T> v1483 = { s1482, s1466 };
    auto s1483 = cvtT(v1483);
    const T s1484 = s1483[0];
    const T s1485 = (T)1.000000;
    const T s1486 = s1485 - s1463;
    const T s1487 = s1472 * s1486;
    const T s1488 = s1469 + s1487;
    vector<T> v1489 = { s1488, s1466 };
    auto s1489 = cvtT(v1489);
    const T s1490 = s1489[0];
    vector<T> v1491 = { s172, s173, s174 };
    auto s1491 = RGBToHSL(v1491);
    const T s1492 = s1491[0];
    const T s1493 = s1491[1];
    const T s1494 = s1491[2];
    const T s1495 = (T)0.500000;
    const T s1496 = s177 - s1495;
    const T s1497 = (T)360.000000;
    const T s1498 = s1496 * s1497;
    const T s1499 = s1492 + s1498;
    const T s1500 = (T)0.500000;
    const T s1501 = s179 - s1500;
    const T s1502 = (T)2.000000;
    const T s1503 = s1501 * s1502;
    const T s1504 = s1493 + s1503;
    const T s1505 = (T)0.500000;
    const T s1506 = s178 - s1505;
    const T s1507 = (T)2.000000;
    const T s1508 = s1506 * s1507;
    const T s1509 = s1494 + s1508;
    vector<T> v1510 = { s1499, s1504, s1509 };
    auto s1510 = HSLToRGB(v1510);
    const T s1511 = s1510[0];
    const T s1512 = s1510[1];
    const T s1513 = s1510[2];
    const T s1514 = (T)0.000000;
    const T s1515 = (T)1.000000;
    vector<T> v1516 = { s1511, s1514, s1515 };
    auto s1516 = clamp(v1516);
    const T s1517 = s1516[0];
    const T s1518 = (T)0.000000;
    const T s1519 = (T)1.000000;
    vector<T> v1520 = { s1512, s1518, s1519 };
    auto s1520 = clamp(v1520);
    const T s1521 = s1520[0];
    const T s1522 = (T)0.000000;
    const T s1523 = (T)1.000000;
    vector<T> v1524 = { s1513, s1522, s1523 };
    auto s1524 = clamp(v1524);
    const T s1525 = s1524[0];
    const T s1526 = (T)1.000000;
    const T s1527 = s175 * s1526;
    const T s1528 = s1466 * s1527;
    const T s1529 = s1466 + s1527;
    const T s1530 = s1529 - s1528;
    const T s1531 = s1517 * s1527;
    const T s1532 = s1521 * s1527;
    const T s1533 = s1525 * s1527;
    const T s1534 = s1478 * s1466;
    const T s1535 = s1484 * s1466;
    const T s1536 = s1490 * s1466;
    const T s1537 = (T)1.000000;
    const T s1538 = s1537 - s1527;
    const T s1539 = s1534 * s1538;
    const T s1540 = s1531 + s1539;
    vector<T> v1541 = { s1540, s1530 };
    auto s1541 = cvtT(v1541);
    const T s1542 = s1541[0];
    const T s1543 = (T)1.000000;
    const T s1544 = s1543 - s1527;
    const T s1545 = s1535 * s1544;
    const T s1546 = s1532 + s1545;
    vector<T> v1547 = { s1546, s1530 };
    auto s1547 = cvtT(v1547);
    const T s1548 = s1547[0];
    const T s1549 = (T)1.000000;
    const T s1550 = s1549 - s1527;
    const T s1551 = s1536 * s1550;
    const T s1552 = s1533 + s1551;
    vector<T> v1553 = { s1552, s1530 };
    auto s1553 = cvtT(v1553);
    const T s1554 = s1553[0];
    vector<T> v1555 = { s180, s181, s182 };
    auto s1555 = RGBToHSL(v1555);
    const T s1556 = s1555[0];
    const T s1557 = s1555[1];
    const T s1558 = s1555[2];
    const T s1559 = (T)0.500000;
    const T s1560 = s185 - s1559;
    const T s1561 = (T)360.000000;
    const T s1562 = s1560 * s1561;
    const T s1563 = s1556 + s1562;
    const T s1564 = (T)0.500000;
    const T s1565 = s187 - s1564;
    const T s1566 = (T)2.000000;
    const T s1567 = s1565 * s1566;
    const T s1568 = s1557 + s1567;
    const T s1569 = (T)0.500000;
    const T s1570 = s186 - s1569;
    const T s1571 = (T)2.000000;
    const T s1572 = s1570 * s1571;
    const T s1573 = s1558 + s1572;
    vector<T> v1574 = { s1563, s1568, s1573 };
    auto s1574 = HSLToRGB(v1574);
    const T s1575 = s1574[0];
    const T s1576 = s1574[1];
    const T s1577 = s1574[2];
    const T s1578 = (T)0.000000;
    const T s1579 = (T)1.000000;
    vector<T> v1580 = { s1575, s1578, s1579 };
    auto s1580 = clamp(v1580);
    const T s1581 = s1580[0];
    const T s1582 = (T)0.000000;
    const T s1583 = (T)1.000000;
    vector<T> v1584 = { s1576, s1582, s1583 };
    auto s1584 = clamp(v1584);
    const T s1585 = s1584[0];
    const T s1586 = (T)0.000000;
    const T s1587 = (T)1.000000;
    vector<T> v1588 = { s1577, s1586, s1587 };
    auto s1588 = clamp(v1588);
    const T s1589 = s1588[0];
    const T s1590 = (T)1.000000;
    const T s1591 = s183 * s1590;
    const T s1592 = s1530 * s1591;
    const T s1593 = s1530 + s1591;
    const T s1594 = s1593 - s1592;
    const T s1595 = s1581 * s1591;
    const T s1596 = s1585 * s1591;
    const T s1597 = s1589 * s1591;
    const T s1598 = s1542 * s1530;
    const T s1599 = s1548 * s1530;
    const T s1600 = s1554 * s1530;
    vector<T> v1601 = { s1530, s1591 };
    auto s1601 = linearDodgeAlpha(v1601);
    const T s1602 = s1601[0];
    const T s1603 = s1595 + s1598;
    vector<T> v1604 = { s1603, s1602 };
    auto s1604 = cvtT(v1604);
    const T s1605 = s1604[0];
    const T s1606 = s1596 + s1599;
    vector<T> v1607 = { s1606, s1602 };
    auto s1607 = cvtT(v1607);
    const T s1608 = s1607[0];
    const T s1609 = s1597 + s1600;
    vector<T> v1610 = { s1609, s1602 };
    auto s1610 = cvtT(v1610);
    const T s1611 = s1610[0];
    vector<T> v1612 = { s188, s189, s190 };
    auto s1612 = RGBToHSL(v1612);
    const T s1613 = s1612[0];
    const T s1614 = s1612[1];
    const T s1615 = s1612[2];
    const T s1616 = (T)0.500000;
    const T s1617 = s193 - s1616;
    const T s1618 = (T)360.000000;
    const T s1619 = s1617 * s1618;
    const T s1620 = s1613 + s1619;
    const T s1621 = (T)0.500000;
    const T s1622 = s195 - s1621;
    const T s1623 = (T)2.000000;
    const T s1624 = s1622 * s1623;
    const T s1625 = s1614 + s1624;
    const T s1626 = (T)0.500000;
    const T s1627 = s194 - s1626;
    const T s1628 = (T)2.000000;
    const T s1629 = s1627 * s1628;
    const T s1630 = s1615 + s1629;
    vector<T> v1631 = { s1620, s1625, s1630 };
    auto s1631 = HSLToRGB(v1631);
    const T s1632 = s1631[0];
    const T s1633 = s1631[1];
    const T s1634 = s1631[2];
    const T s1635 = (T)0.000000;
    const T s1636 = (T)1.000000;
    vector<T> v1637 = { s1632, s1635, s1636 };
    auto s1637 = clamp(v1637);
    const T s1638 = s1637[0];
    const T s1639 = (T)0.000000;
    const T s1640 = (T)1.000000;
    vector<T> v1641 = { s1633, s1639, s1640 };
    auto s1641 = clamp(v1641);
    const T s1642 = s1641[0];
    const T s1643 = (T)0.000000;
    const T s1644 = (T)1.000000;
    vector<T> v1645 = { s1634, s1643, s1644 };
    auto s1645 = clamp(v1645);
    const T s1646 = s1645[0];
    const T s1647 = (T)1.000000;
    const T s1648 = s191 * s1647;
    const T s1649 = s1602 * s1648;
    const T s1650 = s1602 + s1648;
    const T s1651 = s1650 - s1649;
    const T s1652 = s1638 * s1648;
    const T s1653 = s1642 * s1648;
    const T s1654 = s1646 * s1648;
    const T s1655 = s1605 * s1602;
    const T s1656 = s1608 * s1602;
    const T s1657 = s1611 * s1602;
    vector<T> v1658 = { s1602, s1648 };
    auto s1658 = linearDodgeAlpha(v1658);
    const T s1659 = s1658[0];
    const T s1660 = s1652 + s1655;
    vector<T> v1661 = { s1660, s1659 };
    auto s1661 = cvtT(v1661);
    const T s1662 = s1661[0];
    const T s1663 = s1653 + s1656;
    vector<T> v1664 = { s1663, s1659 };
    auto s1664 = cvtT(v1664);
    const T s1665 = s1664[0];
    const T s1666 = s1654 + s1657;
    vector<T> v1667 = { s1666, s1659 };
    auto s1667 = cvtT(v1667);
    const T s1668 = s1667[0];
    vector<T> v1669 = { s196, s197, s198 };
    auto s1669 = RGBToHSL(v1669);
    const T s1670 = s1669[0];
    const T s1671 = s1669[1];
    const T s1672 = s1669[2];
    const T s1673 = (T)0.500000;
    const T s1674 = s201 - s1673;
    const T s1675 = (T)360.000000;
    const T s1676 = s1674 * s1675;
    const T s1677 = s1670 + s1676;
    const T s1678 = (T)0.500000;
    const T s1679 = s203 - s1678;
    const T s1680 = (T)2.000000;
    const T s1681 = s1679 * s1680;
    const T s1682 = s1671 + s1681;
    const T s1683 = (T)0.500000;
    const T s1684 = s202 - s1683;
    const T s1685 = (T)2.000000;
    const T s1686 = s1684 * s1685;
    const T s1687 = s1672 + s1686;
    vector<T> v1688 = { s1677, s1682, s1687 };
    auto s1688 = HSLToRGB(v1688);
    const T s1689 = s1688[0];
    const T s1690 = s1688[1];
    const T s1691 = s1688[2];
    const T s1692 = (T)0.000000;
    const T s1693 = (T)1.000000;
    vector<T> v1694 = { s1689, s1692, s1693 };
    auto s1694 = clamp(v1694);
    const T s1695 = s1694[0];
    const T s1696 = (T)0.000000;
    const T s1697 = (T)1.000000;
    vector<T> v1698 = { s1690, s1696, s1697 };
    auto s1698 = clamp(v1698);
    const T s1699 = s1698[0];
    const T s1700 = (T)0.000000;
    const T s1701 = (T)1.000000;
    vector<T> v1702 = { s1691, s1700, s1701 };
    auto s1702 = clamp(v1702);
    const T s1703 = s1702[0];
    const T s1704 = (T)1.000000;
    const T s1705 = s199 * s1704;
    const T s1706 = s1659 * s1705;
    const T s1707 = s1659 + s1705;
    const T s1708 = s1707 - s1706;
    const T s1709 = s1695 * s1705;
    const T s1710 = s1699 * s1705;
    const T s1711 = s1703 * s1705;
    const T s1712 = s1662 * s1659;
    const T s1713 = s1665 * s1659;
    const T s1714 = s1668 * s1659;
    const T s1715 = (T)1.000000;
    const T s1716 = s1715 - s1705;
    const T s1717 = s1712 * s1716;
    const T s1718 = s1709 + s1717;
    vector<T> v1719 = { s1718, s1708 };
    auto s1719 = cvtT(v1719);
    const T s1720 = s1719[0];
    const T s1721 = (T)1.000000;
    const T s1722 = s1721 - s1705;
    const T s1723 = s1713 * s1722;
    const T s1724 = s1710 + s1723;
    vector<T> v1725 = { s1724, s1708 };
    auto s1725 = cvtT(v1725);
    const T s1726 = s1725[0];
    const T s1727 = (T)1.000000;
    const T s1728 = s1727 - s1705;
    const T s1729 = s1714 * s1728;
    const T s1730 = s1711 + s1729;
    vector<T> v1731 = { s1730, s1708 };
    auto s1731 = cvtT(v1731);
    const T s1732 = s1731[0];
    vector<T> v1733 = { s204, s205, s206 };
    auto s1733 = RGBToHSL(v1733);
    const T s1734 = s1733[0];
    const T s1735 = s1733[1];
    const T s1736 = s1733[2];
    const T s1737 = (T)0.500000;
    const T s1738 = s209 - s1737;
    const T s1739 = (T)360.000000;
    const T s1740 = s1738 * s1739;
    const T s1741 = s1734 + s1740;
    const T s1742 = (T)0.500000;
    const T s1743 = s211 - s1742;
    const T s1744 = (T)2.000000;
    const T s1745 = s1743 * s1744;
    const T s1746 = s1735 + s1745;
    const T s1747 = (T)0.500000;
    const T s1748 = s210 - s1747;
    const T s1749 = (T)2.000000;
    const T s1750 = s1748 * s1749;
    const T s1751 = s1736 + s1750;
    vector<T> v1752 = { s1741, s1746, s1751 };
    auto s1752 = HSLToRGB(v1752);
    const T s1753 = s1752[0];
    const T s1754 = s1752[1];
    const T s1755 = s1752[2];
    const T s1756 = (T)0.000000;
    const T s1757 = (T)1.000000;
    vector<T> v1758 = { s1753, s1756, s1757 };
    auto s1758 = clamp(v1758);
    const T s1759 = s1758[0];
    const T s1760 = (T)0.000000;
    const T s1761 = (T)1.000000;
    vector<T> v1762 = { s1754, s1760, s1761 };
    auto s1762 = clamp(v1762);
    const T s1763 = s1762[0];
    const T s1764 = (T)0.000000;
    const T s1765 = (T)1.000000;
    vector<T> v1766 = { s1755, s1764, s1765 };
    auto s1766 = clamp(v1766);
    const T s1767 = s1766[0];
    const T s1768 = (T)1.000000;
    const T s1769 = s207 * s1768;
    const T s1770 = s1708 * s1769;
    const T s1771 = s1708 + s1769;
    const T s1772 = s1771 - s1770;
    const T s1773 = s1759 * s1769;
    const T s1774 = s1763 * s1769;
    const T s1775 = s1767 * s1769;
    const T s1776 = s1720 * s1708;
    const T s1777 = s1726 * s1708;
    const T s1778 = s1732 * s1708;
    const T s1779 = (T)1.000000;
    const T s1780 = s1779 - s1769;
    const T s1781 = s1776 * s1780;
    const T s1782 = s1773 + s1781;
    vector<T> v1783 = { s1782, s1772 };
    auto s1783 = cvtT(v1783);
    const T s1784 = s1783[0];
    const T s1785 = (T)1.000000;
    const T s1786 = s1785 - s1769;
    const T s1787 = s1777 * s1786;
    const T s1788 = s1774 + s1787;
    vector<T> v1789 = { s1788, s1772 };
    auto s1789 = cvtT(v1789);
    const T s1790 = s1789[0];
    const T s1791 = (T)1.000000;
    const T s1792 = s1791 - s1769;
    const T s1793 = s1778 * s1792;
    const T s1794 = s1775 + s1793;
    vector<T> v1795 = { s1794, s1772 };
    auto s1795 = cvtT(v1795);
    const T s1796 = s1795[0];
    vector<T> v1797 = { s212, s213, s214 };
    auto s1797 = RGBToHSL(v1797);
    const T s1798 = s1797[0];
    const T s1799 = s1797[1];
    const T s1800 = s1797[2];
    const T s1801 = (T)0.500000;
    const T s1802 = s217 - s1801;
    const T s1803 = (T)360.000000;
    const T s1804 = s1802 * s1803;
    const T s1805 = s1798 + s1804;
    const T s1806 = (T)0.500000;
    const T s1807 = s219 - s1806;
    const T s1808 = (T)2.000000;
    const T s1809 = s1807 * s1808;
    const T s1810 = s1799 + s1809;
    const T s1811 = (T)0.500000;
    const T s1812 = s218 - s1811;
    const T s1813 = (T)2.000000;
    const T s1814 = s1812 * s1813;
    const T s1815 = s1800 + s1814;
    vector<T> v1816 = { s1805, s1810, s1815 };
    auto s1816 = HSLToRGB(v1816);
    const T s1817 = s1816[0];
    const T s1818 = s1816[1];
    const T s1819 = s1816[2];
    const T s1820 = (T)0.000000;
    const T s1821 = (T)1.000000;
    vector<T> v1822 = { s1817, s1820, s1821 };
    auto s1822 = clamp(v1822);
    const T s1823 = s1822[0];
    const T s1824 = (T)0.000000;
    const T s1825 = (T)1.000000;
    vector<T> v1826 = { s1818, s1824, s1825 };
    auto s1826 = clamp(v1826);
    const T s1827 = s1826[0];
    const T s1828 = (T)0.000000;
    const T s1829 = (T)1.000000;
    vector<T> v1830 = { s1819, s1828, s1829 };
    auto s1830 = clamp(v1830);
    const T s1831 = s1830[0];
    const T s1832 = (T)1.000000;
    const T s1833 = s215 * s1832;
    const T s1834 = s1772 * s1833;
    const T s1835 = s1772 + s1833;
    const T s1836 = s1835 - s1834;
    const T s1837 = s1823 * s1833;
    const T s1838 = s1827 * s1833;
    const T s1839 = s1831 * s1833;
    const T s1840 = s1784 * s1772;
    const T s1841 = s1790 * s1772;
    const T s1842 = s1796 * s1772;
    vector<T> v1843 = { s1772, s1833 };
    auto s1843 = linearDodgeAlpha(v1843);
    const T s1844 = s1843[0];
    const T s1845 = s1837 + s1840;
    vector<T> v1846 = { s1845, s1844 };
    auto s1846 = cvtT(v1846);
    const T s1847 = s1846[0];
    const T s1848 = s1838 + s1841;
    vector<T> v1849 = { s1848, s1844 };
    auto s1849 = cvtT(v1849);
    const T s1850 = s1849[0];
    const T s1851 = s1839 + s1842;
    vector<T> v1852 = { s1851, s1844 };
    auto s1852 = cvtT(v1852);
    const T s1853 = s1852[0];
    vector<T> v1854 = { s220, s221, s222 };
    auto s1854 = RGBToHSL(v1854);
    const T s1855 = s1854[0];
    const T s1856 = s1854[1];
    const T s1857 = s1854[2];
    const T s1858 = (T)0.500000;
    const T s1859 = s225 - s1858;
    const T s1860 = (T)360.000000;
    const T s1861 = s1859 * s1860;
    const T s1862 = s1855 + s1861;
    const T s1863 = (T)0.500000;
    const T s1864 = s227 - s1863;
    const T s1865 = (T)2.000000;
    const T s1866 = s1864 * s1865;
    const T s1867 = s1856 + s1866;
    const T s1868 = (T)0.500000;
    const T s1869 = s226 - s1868;
    const T s1870 = (T)2.000000;
    const T s1871 = s1869 * s1870;
    const T s1872 = s1857 + s1871;
    vector<T> v1873 = { s1862, s1867, s1872 };
    auto s1873 = HSLToRGB(v1873);
    const T s1874 = s1873[0];
    const T s1875 = s1873[1];
    const T s1876 = s1873[2];
    const T s1877 = (T)0.000000;
    const T s1878 = (T)1.000000;
    vector<T> v1879 = { s1874, s1877, s1878 };
    auto s1879 = clamp(v1879);
    const T s1880 = s1879[0];
    const T s1881 = (T)0.000000;
    const T s1882 = (T)1.000000;
    vector<T> v1883 = { s1875, s1881, s1882 };
    auto s1883 = clamp(v1883);
    const T s1884 = s1883[0];
    const T s1885 = (T)0.000000;
    const T s1886 = (T)1.000000;
    vector<T> v1887 = { s1876, s1885, s1886 };
    auto s1887 = clamp(v1887);
    const T s1888 = s1887[0];
    const T s1889 = (T)1.000000;
    const T s1890 = s223 * s1889;
    const T s1891 = s1844 * s1890;
    const T s1892 = s1844 + s1890;
    const T s1893 = s1892 - s1891;
    const T s1894 = s1880 * s1890;
    const T s1895 = s1884 * s1890;
    const T s1896 = s1888 * s1890;
    const T s1897 = s1847 * s1844;
    const T s1898 = s1850 * s1844;
    const T s1899 = s1853 * s1844;
    vector<T> v1900 = { s1844, s1890 };
    auto s1900 = linearDodgeAlpha(v1900);
    const T s1901 = s1900[0];
    const T s1902 = s1894 + s1897;
    vector<T> v1903 = { s1902, s1901 };
    auto s1903 = cvtT(v1903);
    const T s1904 = s1903[0];
    const T s1905 = s1895 + s1898;
    vector<T> v1906 = { s1905, s1901 };
    auto s1906 = cvtT(v1906);
    const T s1907 = s1906[0];
    const T s1908 = s1896 + s1899;
    vector<T> v1909 = { s1908, s1901 };
    auto s1909 = cvtT(v1909);
    const T s1910 = s1909[0];
    vector<T> v1911 = { s228, s229, s230 };
    auto s1911 = RGBToHSL(v1911);
    const T s1912 = s1911[0];
    const T s1913 = s1911[1];
    const T s1914 = s1911[2];
    const T s1915 = (T)0.500000;
    const T s1916 = s233 - s1915;
    const T s1917 = (T)360.000000;
    const T s1918 = s1916 * s1917;
    const T s1919 = s1912 + s1918;
    const T s1920 = (T)0.500000;
    const T s1921 = s235 - s1920;
    const T s1922 = (T)2.000000;
    const T s1923 = s1921 * s1922;
    const T s1924 = s1913 + s1923;
    const T s1925 = (T)0.500000;
    const T s1926 = s234 - s1925;
    const T s1927 = (T)2.000000;
    const T s1928 = s1926 * s1927;
    const T s1929 = s1914 + s1928;
    vector<T> v1930 = { s1919, s1924, s1929 };
    auto s1930 = HSLToRGB(v1930);
    const T s1931 = s1930[0];
    const T s1932 = s1930[1];
    const T s1933 = s1930[2];
    const T s1934 = (T)0.000000;
    const T s1935 = (T)1.000000;
    vector<T> v1936 = { s1931, s1934, s1935 };
    auto s1936 = clamp(v1936);
    const T s1937 = s1936[0];
    const T s1938 = (T)0.000000;
    const T s1939 = (T)1.000000;
    vector<T> v1940 = { s1932, s1938, s1939 };
    auto s1940 = clamp(v1940);
    const T s1941 = s1940[0];
    const T s1942 = (T)0.000000;
    const T s1943 = (T)1.000000;
    vector<T> v1944 = { s1933, s1942, s1943 };
    auto s1944 = clamp(v1944);
    const T s1945 = s1944[0];
    const T s1946 = (T)1.000000;
    const T s1947 = s231 * s1946;
    const T s1948 = s1901 * s1947;
    const T s1949 = s1901 + s1947;
    const T s1950 = s1949 - s1948;
    const T s1951 = s1937 * s1947;
    const T s1952 = s1941 * s1947;
    const T s1953 = s1945 * s1947;
    const T s1954 = s1904 * s1901;
    const T s1955 = s1907 * s1901;
    const T s1956 = s1910 * s1901;
    const T s1957 = (T)1.000000;
    const T s1958 = s1957 - s1947;
    const T s1959 = s1954 * s1958;
    const T s1960 = s1951 + s1959;
    vector<T> v1961 = { s1960, s1950 };
    auto s1961 = cvtT(v1961);
    const T s1962 = s1961[0];
    const T s1963 = (T)1.000000;
    const T s1964 = s1963 - s1947;
    const T s1965 = s1955 * s1964;
    const T s1966 = s1952 + s1965;
    vector<T> v1967 = { s1966, s1950 };
    auto s1967 = cvtT(v1967);
    const T s1968 = s1967[0];
    const T s1969 = (T)1.000000;
    const T s1970 = s1969 - s1947;
    const T s1971 = s1956 * s1970;
    const T s1972 = s1953 + s1971;
    vector<T> v1973 = { s1972, s1950 };
    auto s1973 = cvtT(v1973);
    const T s1974 = s1973[0];
    vector<T> v1975 = { s236, s237, s238 };
    auto s1975 = RGBToHSL(v1975);
    const T s1976 = s1975[0];
    const T s1977 = s1975[1];
    const T s1978 = s1975[2];
    const T s1979 = (T)0.500000;
    const T s1980 = s241 - s1979;
    const T s1981 = (T)360.000000;
    const T s1982 = s1980 * s1981;
    const T s1983 = s1976 + s1982;
    const T s1984 = (T)0.500000;
    const T s1985 = s243 - s1984;
    const T s1986 = (T)2.000000;
    const T s1987 = s1985 * s1986;
    const T s1988 = s1977 + s1987;
    const T s1989 = (T)0.500000;
    const T s1990 = s242 - s1989;
    const T s1991 = (T)2.000000;
    const T s1992 = s1990 * s1991;
    const T s1993 = s1978 + s1992;
    vector<T> v1994 = { s1983, s1988, s1993 };
    auto s1994 = HSLToRGB(v1994);
    const T s1995 = s1994[0];
    const T s1996 = s1994[1];
    const T s1997 = s1994[2];
    const T s1998 = (T)0.000000;
    const T s1999 = (T)1.000000;
    vector<T> v2000 = { s1995, s1998, s1999 };
    auto s2000 = clamp(v2000);
    const T s2001 = s2000[0];
    const T s2002 = (T)0.000000;
    const T s2003 = (T)1.000000;
    vector<T> v2004 = { s1996, s2002, s2003 };
    auto s2004 = clamp(v2004);
    const T s2005 = s2004[0];
    const T s2006 = (T)0.000000;
    const T s2007 = (T)1.000000;
    vector<T> v2008 = { s1997, s2006, s2007 };
    auto s2008 = clamp(v2008);
    const T s2009 = s2008[0];
    const T s2010 = (T)1.000000;
    const T s2011 = s239 * s2010;
    const T s2012 = s1950 * s2011;
    const T s2013 = s1950 + s2011;
    const T s2014 = s2013 - s2012;
    const T s2015 = s2001 * s2011;
    const T s2016 = s2005 * s2011;
    const T s2017 = s2009 * s2011;
    const T s2018 = s1962 * s1950;
    const T s2019 = s1968 * s1950;
    const T s2020 = s1974 * s1950;
    const T s2021 = (T)1.000000;
    const T s2022 = s2021 - s2011;
    const T s2023 = s2018 * s2022;
    const T s2024 = s2015 + s2023;
    vector<T> v2025 = { s2024, s2014 };
    auto s2025 = cvtT(v2025);
    const T s2026 = s2025[0];
    const T s2027 = (T)1.000000;
    const T s2028 = s2027 - s2011;
    const T s2029 = s2019 * s2028;
    const T s2030 = s2016 + s2029;
    vector<T> v2031 = { s2030, s2014 };
    auto s2031 = cvtT(v2031);
    const T s2032 = s2031[0];
    const T s2033 = (T)1.000000;
    const T s2034 = s2033 - s2011;
    const T s2035 = s2020 * s2034;
    const T s2036 = s2017 + s2035;
    vector<T> v2037 = { s2036, s2014 };
    auto s2037 = cvtT(v2037);
    const T s2038 = s2037[0];
    vector<T> v2039 = { s244, s245, s246 };
    auto s2039 = RGBToHSL(v2039);
    const T s2040 = s2039[0];
    const T s2041 = s2039[1];
    const T s2042 = s2039[2];
    const T s2043 = (T)0.500000;
    const T s2044 = s249 - s2043;
    const T s2045 = (T)360.000000;
    const T s2046 = s2044 * s2045;
    const T s2047 = s2040 + s2046;
    const T s2048 = (T)0.500000;
    const T s2049 = s251 - s2048;
    const T s2050 = (T)2.000000;
    const T s2051 = s2049 * s2050;
    const T s2052 = s2041 + s2051;
    const T s2053 = (T)0.500000;
    const T s2054 = s250 - s2053;
    const T s2055 = (T)2.000000;
    const T s2056 = s2054 * s2055;
    const T s2057 = s2042 + s2056;
    vector<T> v2058 = { s2047, s2052, s2057 };
    auto s2058 = HSLToRGB(v2058);
    const T s2059 = s2058[0];
    const T s2060 = s2058[1];
    const T s2061 = s2058[2];
    const T s2062 = (T)0.000000;
    const T s2063 = (T)1.000000;
    vector<T> v2064 = { s2059, s2062, s2063 };
    auto s2064 = clamp(v2064);
    const T s2065 = s2064[0];
    const T s2066 = (T)0.000000;
    const T s2067 = (T)1.000000;
    vector<T> v2068 = { s2060, s2066, s2067 };
    auto s2068 = clamp(v2068);
    const T s2069 = s2068[0];
    const T s2070 = (T)0.000000;
    const T s2071 = (T)1.000000;
    vector<T> v2072 = { s2061, s2070, s2071 };
    auto s2072 = clamp(v2072);
    const T s2073 = s2072[0];
    const T s2074 = (T)1.000000;
    const T s2075 = s247 * s2074;
    const T s2076 = s2014 * s2075;
    const T s2077 = s2014 + s2075;
    const T s2078 = s2077 - s2076;
    const T s2079 = s2065 * s2075;
    const T s2080 = s2069 * s2075;
    const T s2081 = s2073 * s2075;
    const T s2082 = s2026 * s2014;
    const T s2083 = s2032 * s2014;
    const T s2084 = s2038 * s2014;
    vector<T> v2085 = { s2014, s2075 };
    auto s2085 = linearDodgeAlpha(v2085);
    const T s2086 = s2085[0];
    const T s2087 = s2079 + s2082;
    vector<T> v2088 = { s2087, s2086 };
    auto s2088 = cvtT(v2088);
    const T s2089 = s2088[0];
    const T s2090 = s2080 + s2083;
    vector<T> v2091 = { s2090, s2086 };
    auto s2091 = cvtT(v2091);
    const T s2092 = s2091[0];
    const T s2093 = s2081 + s2084;
    vector<T> v2094 = { s2093, s2086 };
    auto s2094 = cvtT(v2094);
    const T s2095 = s2094[0];
    vector<T> v2096 = { s252, s253, s254 };
    auto s2096 = RGBToHSL(v2096);
    const T s2097 = s2096[0];
    const T s2098 = s2096[1];
    const T s2099 = s2096[2];
    const T s2100 = (T)0.500000;
    const T s2101 = s257 - s2100;
    const T s2102 = (T)360.000000;
    const T s2103 = s2101 * s2102;
    const T s2104 = s2097 + s2103;
    const T s2105 = (T)0.500000;
    const T s2106 = s259 - s2105;
    const T s2107 = (T)2.000000;
    const T s2108 = s2106 * s2107;
    const T s2109 = s2098 + s2108;
    const T s2110 = (T)0.500000;
    const T s2111 = s258 - s2110;
    const T s2112 = (T)2.000000;
    const T s2113 = s2111 * s2112;
    const T s2114 = s2099 + s2113;
    vector<T> v2115 = { s2104, s2109, s2114 };
    auto s2115 = HSLToRGB(v2115);
    const T s2116 = s2115[0];
    const T s2117 = s2115[1];
    const T s2118 = s2115[2];
    const T s2119 = (T)0.000000;
    const T s2120 = (T)1.000000;
    vector<T> v2121 = { s2116, s2119, s2120 };
    auto s2121 = clamp(v2121);
    const T s2122 = s2121[0];
    const T s2123 = (T)0.000000;
    const T s2124 = (T)1.000000;
    vector<T> v2125 = { s2117, s2123, s2124 };
    auto s2125 = clamp(v2125);
    const T s2126 = s2125[0];
    const T s2127 = (T)0.000000;
    const T s2128 = (T)1.000000;
    vector<T> v2129 = { s2118, s2127, s2128 };
    auto s2129 = clamp(v2129);
    const T s2130 = s2129[0];
    const T s2131 = (T)1.000000;
    const T s2132 = s255 * s2131;
    const T s2133 = s2086 * s2132;
    const T s2134 = s2086 + s2132;
    const T s2135 = s2134 - s2133;
    const T s2136 = s2122 * s2132;
    const T s2137 = s2126 * s2132;
    const T s2138 = s2130 * s2132;
    const T s2139 = s2089 * s2086;
    const T s2140 = s2092 * s2086;
    const T s2141 = s2095 * s2086;
    vector<T> v2142 = { s2086, s2132 };
    auto s2142 = linearDodgeAlpha(v2142);
    const T s2143 = s2142[0];
    const T s2144 = s2136 + s2139;
    vector<T> v2145 = { s2144, s2143 };
    auto s2145 = cvtT(v2145);
    const T s2146 = s2145[0];
    const T s2147 = s2137 + s2140;
    vector<T> v2148 = { s2147, s2143 };
    auto s2148 = cvtT(v2148);
    const T s2149 = s2148[0];
    const T s2150 = s2138 + s2141;
    vector<T> v2151 = { s2150, s2143 };
    auto s2151 = cvtT(v2151);
    const T s2152 = s2151[0];
    vector<T> v2153 = { s260, s261, s262 };
    auto s2153 = RGBToHSL(v2153);
    const T s2154 = s2153[0];
    const T s2155 = s2153[1];
    const T s2156 = s2153[2];
    const T s2157 = (T)0.500000;
    const T s2158 = s265 - s2157;
    const T s2159 = (T)360.000000;
    const T s2160 = s2158 * s2159;
    const T s2161 = s2154 + s2160;
    const T s2162 = (T)0.500000;
    const T s2163 = s267 - s2162;
    const T s2164 = (T)2.000000;
    const T s2165 = s2163 * s2164;
    const T s2166 = s2155 + s2165;
    const T s2167 = (T)0.500000;
    const T s2168 = s266 - s2167;
    const T s2169 = (T)2.000000;
    const T s2170 = s2168 * s2169;
    const T s2171 = s2156 + s2170;
    vector<T> v2172 = { s2161, s2166, s2171 };
    auto s2172 = HSLToRGB(v2172);
    const T s2173 = s2172[0];
    const T s2174 = s2172[1];
    const T s2175 = s2172[2];
    const T s2176 = (T)0.000000;
    const T s2177 = (T)1.000000;
    vector<T> v2178 = { s2173, s2176, s2177 };
    auto s2178 = clamp(v2178);
    const T s2179 = s2178[0];
    const T s2180 = (T)0.000000;
    const T s2181 = (T)1.000000;
    vector<T> v2182 = { s2174, s2180, s2181 };
    auto s2182 = clamp(v2182);
    const T s2183 = s2182[0];
    const T s2184 = (T)0.000000;
    const T s2185 = (T)1.000000;
    vector<T> v2186 = { s2175, s2184, s2185 };
    auto s2186 = clamp(v2186);
    const T s2187 = s2186[0];
    const T s2188 = (T)1.000000;
    const T s2189 = s263 * s2188;
    const T s2190 = s2143 * s2189;
    const T s2191 = s2143 + s2189;
    const T s2192 = s2191 - s2190;
    const T s2193 = s2179 * s2189;
    const T s2194 = s2183 * s2189;
    const T s2195 = s2187 * s2189;
    const T s2196 = s2146 * s2143;
    const T s2197 = s2149 * s2143;
    const T s2198 = s2152 * s2143;
    const T s2199 = (T)1.000000;
    const T s2200 = s2199 - s2189;
    const T s2201 = s2196 * s2200;
    const T s2202 = s2193 + s2201;
    vector<T> v2203 = { s2202, s2192 };
    auto s2203 = cvtT(v2203);
    const T s2204 = s2203[0];
    const T s2205 = (T)1.000000;
    const T s2206 = s2205 - s2189;
    const T s2207 = s2197 * s2206;
    const T s2208 = s2194 + s2207;
    vector<T> v2209 = { s2208, s2192 };
    auto s2209 = cvtT(v2209);
    const T s2210 = s2209[0];
    const T s2211 = (T)1.000000;
    const T s2212 = s2211 - s2189;
    const T s2213 = s2198 * s2212;
    const T s2214 = s2195 + s2213;
    vector<T> v2215 = { s2214, s2192 };
    auto s2215 = cvtT(v2215);
    const T s2216 = s2215[0];
    vector<T> v2217 = { s268, s269, s270 };
    auto s2217 = RGBToHSL(v2217);
    const T s2218 = s2217[0];
    const T s2219 = s2217[1];
    const T s2220 = s2217[2];
    const T s2221 = (T)0.500000;
    const T s2222 = s273 - s2221;
    const T s2223 = (T)360.000000;
    const T s2224 = s2222 * s2223;
    const T s2225 = s2218 + s2224;
    const T s2226 = (T)0.500000;
    const T s2227 = s275 - s2226;
    const T s2228 = (T)2.000000;
    const T s2229 = s2227 * s2228;
    const T s2230 = s2219 + s2229;
    const T s2231 = (T)0.500000;
    const T s2232 = s274 - s2231;
    const T s2233 = (T)2.000000;
    const T s2234 = s2232 * s2233;
    const T s2235 = s2220 + s2234;
    vector<T> v2236 = { s2225, s2230, s2235 };
    auto s2236 = HSLToRGB(v2236);
    const T s2237 = s2236[0];
    const T s2238 = s2236[1];
    const T s2239 = s2236[2];
    const T s2240 = (T)0.000000;
    const T s2241 = (T)1.000000;
    vector<T> v2242 = { s2237, s2240, s2241 };
    auto s2242 = clamp(v2242);
    const T s2243 = s2242[0];
    const T s2244 = (T)0.000000;
    const T s2245 = (T)1.000000;
    vector<T> v2246 = { s2238, s2244, s2245 };
    auto s2246 = clamp(v2246);
    const T s2247 = s2246[0];
    const T s2248 = (T)0.000000;
    const T s2249 = (T)1.000000;
    vector<T> v2250 = { s2239, s2248, s2249 };
    auto s2250 = clamp(v2250);
    const T s2251 = s2250[0];
    const T s2252 = (T)0.200000;
    const T s2253 = s271 * s2252;
    const T s2254 = s2192 * s2253;
    const T s2255 = s2192 + s2253;
    const T s2256 = s2255 - s2254;
    const T s2257 = s2243 * s2253;
    const T s2258 = s2247 * s2253;
    const T s2259 = s2251 * s2253;
    const T s2260 = s2204 * s2192;
    const T s2261 = s2210 * s2192;
    const T s2262 = s2216 * s2192;
    const T s2263 = (T)1.000000;
    const T s2264 = s2263 - s2253;
    const T s2265 = s2260 * s2264;
    const T s2266 = s2257 + s2265;
    vector<T> v2267 = { s2266, s2256 };
    auto s2267 = cvtT(v2267);
    const T s2268 = s2267[0];
    const T s2269 = (T)1.000000;
    const T s2270 = s2269 - s2253;
    const T s2271 = s2261 * s2270;
    const T s2272 = s2258 + s2271;
    vector<T> v2273 = { s2272, s2256 };
    auto s2273 = cvtT(v2273);
    const T s2274 = s2273[0];
    const T s2275 = (T)1.000000;
    const T s2276 = s2275 - s2253;
    const T s2277 = s2262 * s2276;
    const T s2278 = s2259 + s2277;
    vector<T> v2279 = { s2278, s2256 };
    auto s2279 = cvtT(v2279);
    const T s2280 = s2279[0];
    vector<T> v2281 = { s276, s277, s278 };
    auto s2281 = RGBToHSL(v2281);
    const T s2282 = s2281[0];
    const T s2283 = s2281[1];
    const T s2284 = s2281[2];
    const T s2285 = (T)0.500000;
    const T s2286 = s281 - s2285;
    const T s2287 = (T)360.000000;
    const T s2288 = s2286 * s2287;
    const T s2289 = s2282 + s2288;
    const T s2290 = (T)0.500000;
    const T s2291 = s283 - s2290;
    const T s2292 = (T)2.000000;
    const T s2293 = s2291 * s2292;
    const T s2294 = s2283 + s2293;
    const T s2295 = (T)0.500000;
    const T s2296 = s282 - s2295;
    const T s2297 = (T)2.000000;
    const T s2298 = s2296 * s2297;
    const T s2299 = s2284 + s2298;
    vector<T> v2300 = { s2289, s2294, s2299 };
    auto s2300 = HSLToRGB(v2300);
    const T s2301 = s2300[0];
    const T s2302 = s2300[1];
    const T s2303 = s2300[2];
    const T s2304 = (T)0.000000;
    const T s2305 = (T)1.000000;
    vector<T> v2306 = { s2301, s2304, s2305 };
    auto s2306 = clamp(v2306);
    const T s2307 = s2306[0];
    const T s2308 = (T)0.000000;
    const T s2309 = (T)1.000000;
    vector<T> v2310 = { s2302, s2308, s2309 };
    auto s2310 = clamp(v2310);
    const T s2311 = s2310[0];
    const T s2312 = (T)0.000000;
    const T s2313 = (T)1.000000;
    vector<T> v2314 = { s2303, s2312, s2313 };
    auto s2314 = clamp(v2314);
    const T s2315 = s2314[0];
    const T s2316 = (T)1.000000;
    const T s2317 = s279 * s2316;
    const T s2318 = s2256 * s2317;
    const T s2319 = s2256 + s2317;
    const T s2320 = s2319 - s2318;
    const T s2321 = s2307 * s2317;
    const T s2322 = s2311 * s2317;
    const T s2323 = s2315 * s2317;
    const T s2324 = s2268 * s2256;
    const T s2325 = s2274 * s2256;
    const T s2326 = s2280 * s2256;
    const T s2327 = (T)1.000000;
    const T s2328 = s2327 - s2317;
    const T s2329 = s2324 * s2328;
    const T s2330 = s2321 + s2329;
    vector<T> v2331 = { s2330, s2320 };
    auto s2331 = cvtT(v2331);
    const T s2332 = s2331[0];
    const T s2333 = (T)1.000000;
    const T s2334 = s2333 - s2317;
    const T s2335 = s2325 * s2334;
    const T s2336 = s2322 + s2335;
    vector<T> v2337 = { s2336, s2320 };
    auto s2337 = cvtT(v2337);
    const T s2338 = s2337[0];
    const T s2339 = (T)1.000000;
    const T s2340 = s2339 - s2317;
    const T s2341 = s2326 * s2340;
    const T s2342 = s2323 + s2341;
    vector<T> v2343 = { s2342, s2320 };
    auto s2343 = cvtT(v2343);
    const T s2344 = s2343[0];
    vector<T> v2345 = { s284, s285, s286 };
    auto s2345 = RGBToHSL(v2345);
    const T s2346 = s2345[0];
    const T s2347 = s2345[1];
    const T s2348 = s2345[2];
    const T s2349 = (T)0.500000;
    const T s2350 = s289 - s2349;
    const T s2351 = (T)360.000000;
    const T s2352 = s2350 * s2351;
    const T s2353 = s2346 + s2352;
    const T s2354 = (T)0.500000;
    const T s2355 = s291 - s2354;
    const T s2356 = (T)2.000000;
    const T s2357 = s2355 * s2356;
    const T s2358 = s2347 + s2357;
    const T s2359 = (T)0.500000;
    const T s2360 = s290 - s2359;
    const T s2361 = (T)2.000000;
    const T s2362 = s2360 * s2361;
    const T s2363 = s2348 + s2362;
    vector<T> v2364 = { s2353, s2358, s2363 };
    auto s2364 = HSLToRGB(v2364);
    const T s2365 = s2364[0];
    const T s2366 = s2364[1];
    const T s2367 = s2364[2];
    const T s2368 = (T)0.000000;
    const T s2369 = (T)1.000000;
    vector<T> v2370 = { s2365, s2368, s2369 };
    auto s2370 = clamp(v2370);
    const T s2371 = s2370[0];
    const T s2372 = (T)0.000000;
    const T s2373 = (T)1.000000;
    vector<T> v2374 = { s2366, s2372, s2373 };
    auto s2374 = clamp(v2374);
    const T s2375 = s2374[0];
    const T s2376 = (T)0.000000;
    const T s2377 = (T)1.000000;
    vector<T> v2378 = { s2367, s2376, s2377 };
    auto s2378 = clamp(v2378);
    const T s2379 = s2378[0];
    const T s2380 = (T)1.000000;
    const T s2381 = s287 * s2380;
    const T s2382 = s2320 * s2381;
    const T s2383 = s2320 + s2381;
    const T s2384 = s2383 - s2382;
    const T s2385 = s2371 * s2381;
    const T s2386 = s2375 * s2381;
    const T s2387 = s2379 * s2381;
    const T s2388 = s2332 * s2320;
    const T s2389 = s2338 * s2320;
    const T s2390 = s2344 * s2320;
    vector<T> v2391 = { s2320, s2381 };
    auto s2391 = linearDodgeAlpha(v2391);
    const T s2392 = s2391[0];
    const T s2393 = s2385 + s2388;
    vector<T> v2394 = { s2393, s2392 };
    auto s2394 = cvtT(v2394);
    const T s2395 = s2394[0];
    const T s2396 = s2386 + s2389;
    vector<T> v2397 = { s2396, s2392 };
    auto s2397 = cvtT(v2397);
    const T s2398 = s2397[0];
    const T s2399 = s2387 + s2390;
    vector<T> v2400 = { s2399, s2392 };
    auto s2400 = cvtT(v2400);
    const T s2401 = s2400[0];
    vector<T> v2402 = { s292, s293, s294 };
    auto s2402 = RGBToHSL(v2402);
    const T s2403 = s2402[0];
    const T s2404 = s2402[1];
    const T s2405 = s2402[2];
    const T s2406 = (T)0.500000;
    const T s2407 = s297 - s2406;
    const T s2408 = (T)360.000000;
    const T s2409 = s2407 * s2408;
    const T s2410 = s2403 + s2409;
    const T s2411 = (T)0.500000;
    const T s2412 = s299 - s2411;
    const T s2413 = (T)2.000000;
    const T s2414 = s2412 * s2413;
    const T s2415 = s2404 + s2414;
    const T s2416 = (T)0.500000;
    const T s2417 = s298 - s2416;
    const T s2418 = (T)2.000000;
    const T s2419 = s2417 * s2418;
    const T s2420 = s2405 + s2419;
    vector<T> v2421 = { s2410, s2415, s2420 };
    auto s2421 = HSLToRGB(v2421);
    const T s2422 = s2421[0];
    const T s2423 = s2421[1];
    const T s2424 = s2421[2];
    const T s2425 = (T)0.000000;
    const T s2426 = (T)1.000000;
    vector<T> v2427 = { s2422, s2425, s2426 };
    auto s2427 = clamp(v2427);
    const T s2428 = s2427[0];
    const T s2429 = (T)0.000000;
    const T s2430 = (T)1.000000;
    vector<T> v2431 = { s2423, s2429, s2430 };
    auto s2431 = clamp(v2431);
    const T s2432 = s2431[0];
    const T s2433 = (T)0.000000;
    const T s2434 = (T)1.000000;
    vector<T> v2435 = { s2424, s2433, s2434 };
    auto s2435 = clamp(v2435);
    const T s2436 = s2435[0];
    const T s2437 = (T)1.000000;
    const T s2438 = s295 * s2437;
    const T s2439 = s2392 * s2438;
    const T s2440 = s2392 + s2438;
    const T s2441 = s2440 - s2439;
    const T s2442 = s2428 * s2438;
    const T s2443 = s2432 * s2438;
    const T s2444 = s2436 * s2438;
    const T s2445 = s2395 * s2392;
    const T s2446 = s2398 * s2392;
    const T s2447 = s2401 * s2392;
    vector<T> v2448 = { s2392, s2438 };
    auto s2448 = linearDodgeAlpha(v2448);
    const T s2449 = s2448[0];
    const T s2450 = s2442 + s2445;
    vector<T> v2451 = { s2450, s2449 };
    auto s2451 = cvtT(v2451);
    const T s2452 = s2451[0];
    const T s2453 = s2443 + s2446;
    vector<T> v2454 = { s2453, s2449 };
    auto s2454 = cvtT(v2454);
    const T s2455 = s2454[0];
    const T s2456 = s2444 + s2447;
    vector<T> v2457 = { s2456, s2449 };
    auto s2457 = cvtT(v2457);
    const T s2458 = s2457[0];
    vector<T> v2459 = { s300, s301, s302 };
    auto s2459 = RGBToHSL(v2459);
    const T s2460 = s2459[0];
    const T s2461 = s2459[1];
    const T s2462 = s2459[2];
    const T s2463 = (T)0.500000;
    const T s2464 = s305 - s2463;
    const T s2465 = (T)360.000000;
    const T s2466 = s2464 * s2465;
    const T s2467 = s2460 + s2466;
    const T s2468 = (T)0.500000;
    const T s2469 = s307 - s2468;
    const T s2470 = (T)2.000000;
    const T s2471 = s2469 * s2470;
    const T s2472 = s2461 + s2471;
    const T s2473 = (T)0.500000;
    const T s2474 = s306 - s2473;
    const T s2475 = (T)2.000000;
    const T s2476 = s2474 * s2475;
    const T s2477 = s2462 + s2476;
    vector<T> v2478 = { s2467, s2472, s2477 };
    auto s2478 = HSLToRGB(v2478);
    const T s2479 = s2478[0];
    const T s2480 = s2478[1];
    const T s2481 = s2478[2];
    const T s2482 = (T)0.000000;
    const T s2483 = (T)1.000000;
    vector<T> v2484 = { s2479, s2482, s2483 };
    auto s2484 = clamp(v2484);
    const T s2485 = s2484[0];
    const T s2486 = (T)0.000000;
    const T s2487 = (T)1.000000;
    vector<T> v2488 = { s2480, s2486, s2487 };
    auto s2488 = clamp(v2488);
    const T s2489 = s2488[0];
    const T s2490 = (T)0.000000;
    const T s2491 = (T)1.000000;
    vector<T> v2492 = { s2481, s2490, s2491 };
    auto s2492 = clamp(v2492);
    const T s2493 = s2492[0];
    const T s2494 = (T)1.000000;
    const T s2495 = s303 * s2494;
    const T s2496 = s2449 * s2495;
    const T s2497 = s2449 + s2495;
    const T s2498 = s2497 - s2496;
    const T s2499 = s2485 * s2495;
    const T s2500 = s2489 * s2495;
    const T s2501 = s2493 * s2495;
    const T s2502 = s2452 * s2449;
    const T s2503 = s2455 * s2449;
    const T s2504 = s2458 * s2449;
    const T s2505 = (T)1.000000;
    const T s2506 = s2505 - s2495;
    const T s2507 = s2502 * s2506;
    const T s2508 = s2499 + s2507;
    vector<T> v2509 = { s2508, s2498 };
    auto s2509 = cvtT(v2509);
    const T s2510 = s2509[0];
    const T s2511 = (T)1.000000;
    const T s2512 = s2511 - s2495;
    const T s2513 = s2503 * s2512;
    const T s2514 = s2500 + s2513;
    vector<T> v2515 = { s2514, s2498 };
    auto s2515 = cvtT(v2515);
    const T s2516 = s2515[0];
    const T s2517 = (T)1.000000;
    const T s2518 = s2517 - s2495;
    const T s2519 = s2504 * s2518;
    const T s2520 = s2501 + s2519;
    vector<T> v2521 = { s2520, s2498 };
    auto s2521 = cvtT(v2521);
    const T s2522 = s2521[0];
    vector<T> v2523 = { s308, s309, s310 };
    auto s2523 = RGBToHSL(v2523);
    const T s2524 = s2523[0];
    const T s2525 = s2523[1];
    const T s2526 = s2523[2];
    const T s2527 = (T)0.500000;
    const T s2528 = s313 - s2527;
    const T s2529 = (T)360.000000;
    const T s2530 = s2528 * s2529;
    const T s2531 = s2524 + s2530;
    const T s2532 = (T)0.500000;
    const T s2533 = s315 - s2532;
    const T s2534 = (T)2.000000;
    const T s2535 = s2533 * s2534;
    const T s2536 = s2525 + s2535;
    const T s2537 = (T)0.500000;
    const T s2538 = s314 - s2537;
    const T s2539 = (T)2.000000;
    const T s2540 = s2538 * s2539;
    const T s2541 = s2526 + s2540;
    vector<T> v2542 = { s2531, s2536, s2541 };
    auto s2542 = HSLToRGB(v2542);
    const T s2543 = s2542[0];
    const T s2544 = s2542[1];
    const T s2545 = s2542[2];
    const T s2546 = (T)0.000000;
    const T s2547 = (T)1.000000;
    vector<T> v2548 = { s2543, s2546, s2547 };
    auto s2548 = clamp(v2548);
    const T s2549 = s2548[0];
    const T s2550 = (T)0.000000;
    const T s2551 = (T)1.000000;
    vector<T> v2552 = { s2544, s2550, s2551 };
    auto s2552 = clamp(v2552);
    const T s2553 = s2552[0];
    const T s2554 = (T)0.000000;
    const T s2555 = (T)1.000000;
    vector<T> v2556 = { s2545, s2554, s2555 };
    auto s2556 = clamp(v2556);
    const T s2557 = s2556[0];
    const T s2558 = (T)1.000000;
    const T s2559 = s311 * s2558;
    const T s2560 = s2498 * s2559;
    const T s2561 = s2498 + s2559;
    const T s2562 = s2561 - s2560;
    const T s2563 = s2549 * s2559;
    const T s2564 = s2553 * s2559;
    const T s2565 = s2557 * s2559;
    const T s2566 = s2510 * s2498;
    const T s2567 = s2516 * s2498;
    const T s2568 = s2522 * s2498;
    const T s2569 = (T)1.000000;
    const T s2570 = s2569 - s2559;
    const T s2571 = s2566 * s2570;
    const T s2572 = s2563 + s2571;
    vector<T> v2573 = { s2572, s2562 };
    auto s2573 = cvtT(v2573);
    const T s2574 = s2573[0];
    const T s2575 = (T)1.000000;
    const T s2576 = s2575 - s2559;
    const T s2577 = s2567 * s2576;
    const T s2578 = s2564 + s2577;
    vector<T> v2579 = { s2578, s2562 };
    auto s2579 = cvtT(v2579);
    const T s2580 = s2579[0];
    const T s2581 = (T)1.000000;
    const T s2582 = s2581 - s2559;
    const T s2583 = s2568 * s2582;
    const T s2584 = s2565 + s2583;
    vector<T> v2585 = { s2584, s2562 };
    auto s2585 = cvtT(v2585);
    const T s2586 = s2585[0];
    vector<T> v2587 = { s316, s317, s318 };
    auto s2587 = RGBToHSL(v2587);
    const T s2588 = s2587[0];
    const T s2589 = s2587[1];
    const T s2590 = s2587[2];
    const T s2591 = (T)0.500000;
    const T s2592 = s321 - s2591;
    const T s2593 = (T)360.000000;
    const T s2594 = s2592 * s2593;
    const T s2595 = s2588 + s2594;
    const T s2596 = (T)0.500000;
    const T s2597 = s323 - s2596;
    const T s2598 = (T)2.000000;
    const T s2599 = s2597 * s2598;
    const T s2600 = s2589 + s2599;
    const T s2601 = (T)0.500000;
    const T s2602 = s322 - s2601;
    const T s2603 = (T)2.000000;
    const T s2604 = s2602 * s2603;
    const T s2605 = s2590 + s2604;
    vector<T> v2606 = { s2595, s2600, s2605 };
    auto s2606 = HSLToRGB(v2606);
    const T s2607 = s2606[0];
    const T s2608 = s2606[1];
    const T s2609 = s2606[2];
    const T s2610 = (T)0.000000;
    const T s2611 = (T)1.000000;
    vector<T> v2612 = { s2607, s2610, s2611 };
    auto s2612 = clamp(v2612);
    const T s2613 = s2612[0];
    const T s2614 = (T)0.000000;
    const T s2615 = (T)1.000000;
    vector<T> v2616 = { s2608, s2614, s2615 };
    auto s2616 = clamp(v2616);
    const T s2617 = s2616[0];
    const T s2618 = (T)0.000000;
    const T s2619 = (T)1.000000;
    vector<T> v2620 = { s2609, s2618, s2619 };
    auto s2620 = clamp(v2620);
    const T s2621 = s2620[0];
    const T s2622 = (T)1.000000;
    const T s2623 = s319 * s2622;
    const T s2624 = s2562 * s2623;
    const T s2625 = s2562 + s2623;
    const T s2626 = s2625 - s2624;
    const T s2627 = s2613 * s2623;
    const T s2628 = s2617 * s2623;
    const T s2629 = s2621 * s2623;
    const T s2630 = s2574 * s2562;
    const T s2631 = s2580 * s2562;
    const T s2632 = s2586 * s2562;
    const T s2633 = (T)1.000000;
    const T s2634 = s2633 - s2623;
    const T s2635 = s2630 * s2634;
    const T s2636 = s2627 + s2635;
    vector<T> v2637 = { s2636, s2626 };
    auto s2637 = cvtT(v2637);
    const T s2638 = s2637[0];
    const T s2639 = (T)1.000000;
    const T s2640 = s2639 - s2623;
    const T s2641 = s2631 * s2640;
    const T s2642 = s2628 + s2641;
    vector<T> v2643 = { s2642, s2626 };
    auto s2643 = cvtT(v2643);
    const T s2644 = s2643[0];
    const T s2645 = (T)1.000000;
    const T s2646 = s2645 - s2623;
    const T s2647 = s2632 * s2646;
    const T s2648 = s2629 + s2647;
    vector<T> v2649 = { s2648, s2626 };
    auto s2649 = cvtT(v2649);
    const T s2650 = s2649[0];
    const T s2651 = (T)1.000000;
    const T s2652 = s327 * s2651;
    const T s2653 = s2626 * s2652;
    const T s2654 = s2626 + s2652;
    const T s2655 = s2654 - s2653;
    const T s2656 = s324 * s2652;
    const T s2657 = s325 * s2652;
    const T s2658 = s326 * s2652;
    const T s2659 = s2638 * s2626;
    const T s2660 = s2644 * s2626;
    const T s2661 = s2650 * s2626;
    const T s2662 = (T)1.000000;
    const T s2663 = s2662 - s2652;
    const T s2664 = s2659 * s2663;
    const T s2665 = s2656 + s2664;
    vector<T> v2666 = { s2665, s2655 };
    auto s2666 = cvtT(v2666);
    const T s2667 = s2666[0];
    const T s2668 = (T)1.000000;
    const T s2669 = s2668 - s2652;
    const T s2670 = s2660 * s2669;
    const T s2671 = s2657 + s2670;
    vector<T> v2672 = { s2671, s2655 };
    auto s2672 = cvtT(v2672);
    const T s2673 = s2672[0];
    const T s2674 = (T)1.000000;
    const T s2675 = s2674 - s2652;
    const T s2676 = s2661 * s2675;
    const T s2677 = s2658 + s2676;
    vector<T> v2678 = { s2677, s2655 };
    auto s2678 = cvtT(v2678);
    const T s2679 = s2678[0];
    const T s2680 = (T)0.600000;
    const T s2681 = s332 * s2680;
    const T s2682 = s2655 * s2681;
    const T s2683 = s2655 + s2681;
    const T s2684 = s2683 - s2682;
    const T s2685 = s329 * s2681;
    const T s2686 = s330 * s2681;
    const T s2687 = s331 * s2681;
    const T s2688 = s2667 * s2655;
    const T s2689 = s2673 * s2655;
    const T s2690 = s2679 * s2655;
    vector<T> v2691 = { s2688, s2685, s2655, s2681 };
    auto s2691 = overlay(v2691);
    const T s2692 = s2691[0];
    vector<T> v2693 = { s2692, s2684 };
    auto s2693 = cvtT(v2693);
    const T s2694 = s2693[0];
    vector<T> v2695 = { s2689, s2686, s2655, s2681 };
    auto s2695 = overlay(v2695);
    const T s2696 = s2695[0];
    vector<T> v2697 = { s2696, s2684 };
    auto s2697 = cvtT(v2697);
    const T s2698 = s2697[0];
    vector<T> v2699 = { s2690, s2687, s2655, s2681 };
    auto s2699 = overlay(v2699);
    const T s2700 = s2699[0];
    vector<T> v2701 = { s2700, s2684 };
    auto s2701 = cvtT(v2701);
    const T s2702 = s2701[0];
    vector<T> v2703 = { s2694, s2698, s2702 };
    auto s2703 = RGBToHSL(v2703);
    const T s2704 = s2703[0];
    const T s2705 = s2703[1];
    const T s2706 = s2703[2];
    const T s2707 = (T)0.500000;
    const T s2708 = s335 - s2707;
    const T s2709 = (T)360.000000;
    const T s2710 = s2708 * s2709;
    const T s2711 = s2704 + s2710;
    const T s2712 = (T)0.500000;
    const T s2713 = s337 - s2712;
    const T s2714 = (T)2.000000;
    const T s2715 = s2713 * s2714;
    const T s2716 = s2705 + s2715;
    const T s2717 = (T)0.500000;
    const T s2718 = s336 - s2717;
    const T s2719 = (T)2.000000;
    const T s2720 = s2718 * s2719;
    const T s2721 = s2706 + s2720;
    vector<T> v2722 = { s2711, s2716, s2721 };
    auto s2722 = HSLToRGB(v2722);
    const T s2723 = s2722[0];
    const T s2724 = s2722[1];
    const T s2725 = s2722[2];
    const T s2726 = (T)0.000000;
    const T s2727 = (T)1.000000;
    vector<T> v2728 = { s2723, s2726, s2727 };
    auto s2728 = clamp(v2728);
    const T s2729 = s2728[0];
    const T s2730 = (T)0.000000;
    const T s2731 = (T)1.000000;
    vector<T> v2732 = { s2724, s2730, s2731 };
    auto s2732 = clamp(v2732);
    const T s2733 = s2732[0];
    const T s2734 = (T)0.000000;
    const T s2735 = (T)1.000000;
    vector<T> v2736 = { s2725, s2734, s2735 };
    auto s2736 = clamp(v2736);
    const T s2737 = s2736[0];
    const T s2738 = (T)1.000000;
    const T s2739 = s2684 * s2738;
    const T s2740 = s2684 * s2739;
    const T s2741 = s2684 + s2739;
    const T s2742 = s2741 - s2740;
    const T s2743 = s2729 * s2739;
    const T s2744 = s2733 * s2739;
    const T s2745 = s2737 * s2739;
    const T s2746 = s2694 * s2684;
    const T s2747 = s2698 * s2684;
    const T s2748 = s2702 * s2684;
    const T s2749 = (T)1.000000;
    const T s2750 = s2749 - s2739;
    const T s2751 = s2746 * s2750;
    const T s2752 = s2743 + s2751;
    vector<T> v2753 = { s2752, s2742 };
    auto s2753 = cvtT(v2753);
    const T s2754 = s2753[0];
    const T s2755 = (T)1.000000;
    const T s2756 = s2755 - s2739;
    const T s2757 = s2747 * s2756;
    const T s2758 = s2744 + s2757;
    vector<T> v2759 = { s2758, s2742 };
    auto s2759 = cvtT(v2759);
    const T s2760 = s2759[0];
    const T s2761 = (T)1.000000;
    const T s2762 = s2761 - s2739;
    const T s2763 = s2748 * s2762;
    const T s2764 = s2745 + s2763;
    vector<T> v2765 = { s2764, s2742 };
    auto s2765 = cvtT(v2765);
    const T s2766 = s2765[0];
    const T s2767 = (T)1.000000;
    const T s2768 = s2742 * s2767;
    const T s2769 = s2742 * s2768;
    const T s2770 = s2742 + s2768;
    const T s2771 = s2770 - s2769;
    const T s2772 = s2754 * s2768;
    const T s2773 = s2760 * s2768;
    const T s2774 = s2766 * s2768;
    const T s2775 = s2754 * s2742;
    const T s2776 = s2760 * s2742;
    const T s2777 = s2766 * s2742;
    const T s2778 = (T)1.000000;
    const T s2779 = s2778 - s2768;
    const T s2780 = s2775 * s2779;
    const T s2781 = s2772 + s2780;
    vector<T> v2782 = { s2781, s2771 };
    auto s2782 = cvtT(v2782);
    const T s2783 = s2782[0];
    const T s2784 = (T)1.000000;
    const T s2785 = s2784 - s2768;
    const T s2786 = s2776 * s2785;
    const T s2787 = s2773 + s2786;
    vector<T> v2788 = { s2787, s2771 };
    auto s2788 = cvtT(v2788);
    const T s2789 = s2788[0];
    const T s2790 = (T)1.000000;
    const T s2791 = s2790 - s2768;
    const T s2792 = s2777 * s2791;
    const T s2793 = s2774 + s2792;
    vector<T> v2794 = { s2793, s2771 };
    auto s2794 = cvtT(v2794);
    const T s2795 = s2794[0];
    result[0] = s2783; // R;
    result[1] = s2789; // G;
    result[2] = s2795; // B;
    result[3] = s2771; // A;
    
    return result;
}
